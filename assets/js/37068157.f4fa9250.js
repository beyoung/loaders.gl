"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[5391],{3905:(e,t,l)=>{l.d(t,{Zo:()=>d,kt:()=>f});var n=l(67294);function r(e,t,l){return t in e?Object.defineProperty(e,t,{value:l,enumerable:!0,configurable:!0,writable:!0}):e[t]=l,e}function i(e,t){var l=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),l.push.apply(l,n)}return l}function a(e){for(var t=1;t<arguments.length;t++){var l=null!=arguments[t]?arguments[t]:{};t%2?i(Object(l),!0).forEach((function(t){r(e,t,l[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(l)):i(Object(l)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(l,t))}))}return e}function o(e,t){if(null==e)return{};var l,n,r=function(e,t){if(null==e)return{};var l,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)l=i[n],t.indexOf(l)>=0||(r[l]=e[l]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)l=i[n],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(r[l]=e[l])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),l=t;return e&&(l="function"==typeof e?e(t):a(a({},t),e)),l},d=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var l=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),u=p(l),c=r,f=u["".concat(s,".").concat(c)]||u[c]||m[c]||i;return l?n.createElement(f,a(a({ref:t},d),{},{components:l})):n.createElement(f,a({ref:t},d))}));function f(e,t){var l=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=l.length,a=new Array(i);a[0]=c;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[u]="string"==typeof e?e:r,a[1]=o;for(var p=2;p<i;p++)a[p]=l[p];return n.createElement.apply(null,a)}return n.createElement.apply(null,l)}c.displayName="MDXCreateElement"},86726:(e,t,l)=>{l.r(t),l.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>m,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var n=l(87462),r=(l(67294),l(3905));const i={},a="Overview",o={unversionedId:"modules/polyfills/api-reference/README",id:"modules/polyfills/api-reference/README",title:"Overview",description:"The @loaders.gl/polyfills module installs support for Node.js. This module should be imported before you call any loaders.gl functionality under Node.js",source:"@site/../docs/modules/polyfills/api-reference/README.md",sourceDirName:"modules/polyfills/api-reference",slug:"/modules/polyfills/api-reference/",permalink:"/docs/modules/polyfills/api-reference/",draft:!1,editUrl:"https://github.com/visgl/loaders.gl/tree/master/website/../docs/modules/polyfills/api-reference/README.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"@loaders.gl/pmtiles",permalink:"/docs/modules/pmtiles/"},next:{title:"Overview",permalink:"/docs/modules/shapefile/"}},s={},p=[{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"Features",id:"features",level:2},{value:"Deprecated polyfills",id:"deprecated-polyfills",level:2},{value:"fetch Polyfill",id:"fetch-polyfill",level:3},{value:"Remarks",id:"remarks",level:2},{value:"Attribution",id:"attribution",level:2}],d={toc:p},u="wrapper";function m(e){let{components:t,...l}=e;return(0,r.kt)(u,(0,n.Z)({},d,l,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"overview"},"Overview"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"@loaders.gl/polyfills")," module installs support for Node.js. This module should be imported before you call any loaders.gl functionality under Node.js"),(0,r.kt)("p",null,"loaders.gl is based on the HTML5 API provided by modern, evergreen browsers. "),(0,r.kt)("h2",{id:"installation"},"Installation"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @loaders.gl/polyfills\n")),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("p",null,"Just import ",(0,r.kt)("inlineCode",{parentName:"p"},"@loaders.gl/polyfills")," before you start using other loaders.gl modules."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import '@loaders.gl/polyfills';\nimport '@loaders.gl/core';\n")),(0,r.kt)("h2",{id:"features"},"Features"),(0,r.kt)("p",null,"The polyfills module installs the following capabilities."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"fetching files from Node file system"),(0,r.kt)("li",{parentName:"ul"},"Node Filesystem implementation"),(0,r.kt)("li",{parentName:"ul"},"Node ReadableFile and WritableFile implementations"),(0,r.kt)("li",{parentName:"ul"},"Node Crypto class"),(0,r.kt)("li",{parentName:"ul"},"Node Stream support"),(0,r.kt)("li",{parentName:"ul"},"Node library loading"),(0,r.kt)("li",{parentName:"ul"},"Image parsing and encoding under Node.js\n|")),(0,r.kt)("h2",{id:"deprecated-polyfills"},"Deprecated polyfills"),(0,r.kt)("p",null,"Before Node v18, ",(0,r.kt)("inlineCode",{parentName:"p"},"fetch")," needed to be polyfilled. The ",(0,r.kt)("inlineCode",{parentName:"p"},"@loaders.gl/polyfills")," module still conditionally installs a fetch polyfill on Node 16, but this is expected to be removed in next major release."),(0,r.kt)("h3",{id:"fetch-polyfill"},"fetch Polyfill"),(0,r.kt)("p",null,"The Node.js ",(0,r.kt)("inlineCode",{parentName:"p"},"fetch"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Response")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"Headers")," polyfills supports a large subset of the browser fetch API, including:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Response.text()"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"Response.arrayBuffer()"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"Response.json()")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Response.body")," stream"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"headers"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"status"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"statusText")," etc."),(0,r.kt)("li",{parentName:"ul"},"data uri / base64 decoding"),(0,r.kt)("li",{parentName:"ul"},"automatic gzip, brotli and deflate decompression support for responses with ",(0,r.kt)("inlineCode",{parentName:"li"},"content-encoding")," headers."),(0,r.kt)("li",{parentName:"ul"},"Files ending with ",(0,r.kt)("inlineCode",{parentName:"li"},".gz")," are automatically decompressed with gzip decompression (this is only done on Node.js, in the browser the content-encoding header must be set).")),(0,r.kt)("p",null,"The Node.js ",(0,r.kt)("inlineCode",{parentName:"p"},"fetch")," is able to follow 30X redirect: if ",(0,r.kt)("inlineCode",{parentName:"p"},"Response")," has status 300-399 and ",(0,r.kt)("inlineCode",{parentName:"p"},"location")," header is set, the ",(0,r.kt)("inlineCode",{parentName:"p"},"fetch")," polyfill re-requests data from ",(0,r.kt)("inlineCode",{parentName:"p"},"location"),"."),(0,r.kt)("h2",{id:"remarks"},"Remarks"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The polyfills module can safely be imported in the browser. It is designed to be a no-op in this case, though if you are using new cutting-edge bundlers, they may not respect this configuration.")),(0,r.kt)("h2",{id:"attribution"},"Attribution"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("inlineCode",{parentName:"li"},"Header")," polyfill (for Node.js ",(0,r.kt)("inlineCode",{parentName:"li"},"fetch"),") is a fork of the implementation in ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/github/fetch"},"https://github.com/github/fetch")," (MIT license)."),(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("inlineCode",{parentName:"li"},"Blob")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"File")," polyfills are forks of @gozala's ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/Gozala/web-blob"},(0,r.kt)("inlineCode",{parentName:"a"},"web-blob"))," and ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/Gozala/web-file"},(0,r.kt)("inlineCode",{parentName:"a"},"web-file"))," modules respectively, under MIT license.")))}m.isMDXComponent=!0}}]);