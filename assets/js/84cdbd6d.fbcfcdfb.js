"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[6205],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>f});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=a.createContext({}),s=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},d=function(e){var t=s(e.components);return a.createElement(l.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),u=s(r),p=n,f=u["".concat(l,".").concat(p)]||u[p]||m[p]||o;return r?a.createElement(f,i(i({ref:t},d),{},{components:r})):a.createElement(f,i({ref:t},d))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=p;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[u]="string"==typeof e?e:n,i[1]=c;for(var s=2;s<o;s++)i[s]=r[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}p.displayName="MDXCreateElement"},83009:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>c,toc:()=>s});var a=r(87462),n=(r(67294),r(3905));const o={},i="Schema",c={unversionedId:"arrowjs/api-reference/schema",id:"arrowjs/api-reference/schema",title:"Schema",description:"This documentation reflects Arrow JS v4.0. Needs to be updated for the new Arrow API in v9.0 +.",source:"@site/../docs/arrowjs/api-reference/schema.md",sourceDirName:"arrowjs/api-reference",slug:"/arrowjs/api-reference/schema",permalink:"/docs/arrowjs/api-reference/schema",draft:!1,editUrl:"https://github.com/visgl/loaders.gl/tree/master/website/../docs/arrowjs/api-reference/schema.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Row",permalink:"/docs/arrowjs/api-reference/row"},next:{title:"Table",permalink:"/docs/arrowjs/api-reference/table"}},l={},s=[{value:"Accessors",id:"accessors",level:2},{value:"fields : Field[] (readonly)",id:"fields--field-readonly",level:3},{value:"metadata (readonly)",id:"metadata-readonly",level:3},{value:"dictionaries (readonly)",id:"dictionaries-readonly",level:3},{value:"dictionaryFields (readonly)",id:"dictionaryfields-readonly",level:3},{value:"Methods",id:"methods",level:2},{value:"constructor(fields: Field[], metadata?: Object, dictionaries?: Object, dictionaryFields?: Object)",id:"constructorfields-field-metadata-object-dictionaries-object-dictionaryfields-object",level:3},{value:"select(columnNames) : Schema",id:"selectcolumnnames--schema",level:3}],d={toc:s},u="wrapper";function m(e){let{components:t,...r}=e;return(0,n.kt)(u,(0,a.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"schema"},"Schema"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"This documentation reflects Arrow JS v4.0. Needs to be updated for the new Arrow API in v9.0 +.")),(0,n.kt)("p",null,"Sequence of arrow::Field objects describing the columns of a record batch or table data structure"),(0,n.kt)("h2",{id:"accessors"},"Accessors"),(0,n.kt)("h3",{id:"fields--field-readonly"},"fields : Field[] ","(","readonly)"),(0,n.kt)("p",null,"Return the list of fields (columns) in the schema."),(0,n.kt)("h3",{id:"metadata-readonly"},"metadata (readonly)"),(0,n.kt)("p",null,"The custom key-value metadata, if any. metadata may be null."),(0,n.kt)("h3",{id:"dictionaries-readonly"},"dictionaries (readonly)"),(0,n.kt)("p",null,"TBD - List of dictionaries (each dictionary is associated with a column that is dictionary encoded)."),(0,n.kt)("h3",{id:"dictionaryfields-readonly"},"dictionaryFields (readonly)"),(0,n.kt)("p",null,"TBD - List of fields"),(0,n.kt)("h2",{id:"methods"},"Methods"),(0,n.kt)("h3",{id:"constructorfields-field-metadata-object-dictionaries-object-dictionaryfields-object"},"constructor(fields: Field[], metadata?: Object, dictionaries?: Object, dictionaryFields?: Object)"),(0,n.kt)("p",null,"Creates a new schema instance."),(0,n.kt)("h3",{id:"selectcolumnnames--schema"},"select(columnNames) : Schema"),(0,n.kt)("p",null,"Returns a new ",(0,n.kt)("inlineCode",{parentName:"p"},"Schema")," with the Fields indicated by the column names."))}m.isMDXComponent=!0}}]);