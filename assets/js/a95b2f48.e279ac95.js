"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[3686],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=r.createContext({}),c=function(e){var t=r.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(d.Provider,{value:t},e.children)},s="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,d=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),s=c(n),m=a,f=s["".concat(d,".").concat(m)]||s[m]||u[m]||l;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,i=new Array(l);i[0]=m;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o[s]="string"==typeof e?e:a,i[1]=o;for(var c=2;c<l;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},31995:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>c});var r=n(87462),a=(n(67294),n(3905));const l={},i="Field",o={unversionedId:"arrowjs/api-reference/field",id:"arrowjs/api-reference/field",title:"Field",description:"This documentation reflects Arrow JS v4.0. Needs to be updated for the new Arrow API in v9.0 +.",source:"@site/../docs/arrowjs/api-reference/field.md",sourceDirName:"arrowjs/api-reference",slug:"/arrowjs/api-reference/field",permalink:"/docs/arrowjs/api-reference/field",draft:!1,editUrl:"https://github.com/visgl/loaders.gl/tree/master/website/../docs/arrowjs/api-reference/field.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Dictionary",permalink:"/docs/arrowjs/api-reference/dictionary"},next:{title:"Predicates",permalink:"/docs/arrowjs/api-reference/predicates"}},d={},c=[{value:"Members",id:"members",level:2},{value:"name : String (read only)",id:"name--string-read-only",level:3},{value:"type : Type (read only)",id:"type--type-read-only",level:3},{value:"nullable : Boolean (read only)",id:"nullable--boolean-read-only",level:3},{value:"metadata : Object | null (read only)",id:"metadata--object--null-read-only",level:3},{value:"typeId : ?",id:"typeid--",level:3},{value:"indices : ?",id:"indices--",level:3},{value:"Methods",id:"methods",level:2},{value:"constructor(name : String, nullable?: Boolean, metadata?: Object)",id:"constructorname--string-nullable-boolean-metadata-object",level:3}],p={toc:c},s="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(s,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"field"},"Field"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"This documentation reflects Arrow JS v4.0. Needs to be updated for the new Arrow API in v9.0 +.")),(0,a.kt)("p",null,"The combination of a field name and data type, with optional metadata. Fields are used to describe the individual constituents of a nested DataType or a Schema."),(0,a.kt)("h2",{id:"members"},"Members"),(0,a.kt)("h3",{id:"name--string-read-only"},"name : String (read only)"),(0,a.kt)("p",null,"The name of this field."),(0,a.kt)("h3",{id:"type--type-read-only"},"type : Type (read only)"),(0,a.kt)("p",null,"The type of this field."),(0,a.kt)("h3",{id:"nullable--boolean-read-only"},"nullable : Boolean (read only)"),(0,a.kt)("p",null,"Whether this field can contain ",(0,a.kt)("inlineCode",{parentName:"p"},"null")," values, in addition to values of ",(0,a.kt)("inlineCode",{parentName:"p"},"Type")," (this creates an extra null value map)."),(0,a.kt)("h3",{id:"metadata--object--null-read-only"},"metadata : Object | null (read only)"),(0,a.kt)("p",null,"A field's metadata is represented by a map which holds arbitrary key-value pairs. Returns ",(0,a.kt)("inlineCode",{parentName:"p"},"null")," if no metadata has been set."),(0,a.kt)("h3",{id:"typeid--"},"typeId : ?"),(0,a.kt)("p",null,"TBD?"),(0,a.kt)("h3",{id:"indices--"},"indices : ?"),(0,a.kt)("p",null,"TBD? Used if data type is a dictionary."),(0,a.kt)("h2",{id:"methods"},"Methods"),(0,a.kt)("h3",{id:"constructorname--string-nullable-boolean-metadata-object"},"constructor(name : String, nullable?: Boolean, metadata?: Object)"),(0,a.kt)("p",null,"Creates an instance of ",(0,a.kt)("inlineCode",{parentName:"p"},"Field")," with parameters initialized as follows:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"name")," - Name of the column"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"nullable"),"=",(0,a.kt)("inlineCode",{parentName:"li"},"false")," - Whether a null-array is maintained."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"metadata"),"=",(0,a.kt)("inlineCode",{parentName:"li"},"null")," - Map of metadata")))}u.isMDXComponent=!0}}]);