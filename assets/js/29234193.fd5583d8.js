"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[2203],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>g});var r=a(67294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,o=function(e,t){if(null==e)return{};var a,r,o={},n=Object.keys(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var i=r.createContext({}),d=function(e){var t=r.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},p=function(e){var t=d(e.components);return r.createElement(i.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,o=e.mdxType,n=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=d(a),u=o,g=c["".concat(i,".").concat(u)]||c[u]||m[u]||n;return a?r.createElement(g,s(s({ref:t},p),{},{components:a})):r.createElement(g,s({ref:t},p))}));function g(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var n=a.length,s=new Array(n);s[0]=u;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[c]="string"==typeof e?e:o,s[1]=l;for(var d=2;d<n;d++)s[d]=a[d];return r.createElement.apply(null,s)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},42612:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>m,frontMatter:()=>n,metadata:()=>l,toc:()=>d});var r=a(87462),o=(a(67294),a(3905));const n={},s="Introduction",l={unversionedId:"README",id:"README",title:"Introduction",description:"&nbsp;",source:"@site/../docs/README.mdx",sourceDirName:".",slug:"/",permalink:"/docs/",draft:!1,editUrl:"https://github.com/visgl/loaders.gl/tree/master/website/../docs/README.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",next:{title:"What's New",permalink:"/docs/whats-new"}},i={},d=[{value:"Overview",id:"overview",level:2},{value:"Loaders",id:"loaders",level:2},{value:"Code Examples",id:"code-examples",level:2},{value:"Supported Platforms",id:"supported-platforms",level:2},{value:"Design Goals",id:"design-goals",level:2},{value:"Licenses",id:"licenses",level:2},{value:"Credits and Attributions",id:"credits-and-attributions",level:2},{value:"Primary maintainers",id:"primary-maintainers",level:3},{value:"Open Governance",id:"open-governance",level:2}],p={toc:d},c="wrapper";function m(e){let{components:t,...a}=e;return(0,o.kt)(c,(0,r.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"introduction"},"Introduction"),(0,o.kt)("img",{src:"https://badge.fury.io/js/%40loaders.gl%2Fcore.svg"})," \xa0",(0,o.kt)("img",{src:"https://img.shields.io/badge/License-MIT-green.svg"})," \xa0",(0,o.kt)("img",{src:"https://img.shields.io/npm/dm/@loaders.gl/core.svg"}),"  \xa0 \xa0 \xa0",(0,o.kt)("img",{src:"https://flat.badgen.net/badge/icon/Typed?icon=typescript&label&labelColor=blue&color=555555)"})," \xa0",(0,o.kt)("br",null),(0,o.kt)("br",null),(0,o.kt)("p",null,"This documentation describes loaders.gl ",(0,o.kt)("strong",{parentName:"p"},"v3.3"),". Docs for older versions are available on github:\n",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"https://github.com/visgl/loaders.gl/blob/3.2-release/docs/README.md"},"v3.2")),",\n",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"https://github.com/visgl/loaders.gl/blob/3.1-release/docs/README.md"},"v3.1")),",\n",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"https://github.com/visgl/loaders.gl/blob/3.0-release/docs/README.md"},"v3.0")),",\n",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"https://github.com/visgl/loaders.gl/blob/2.3-release/docs/README.md"},"v2.3")),",\n",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"https://github.com/visgl/loaders.gl/blob/1.3-release/docs/README.md"},"v1.3")),"."),(0,o.kt)("h2",{id:"overview"},"Overview"),(0,o.kt)("p",null,"loaders.gl is a collection of open source loaders and writers for file formats including tabular, geospatial, and 3D formats. It is focused on supporting visualization and analytics of big data. "),(0,o.kt)("p",null,"loaders.gl is packaged and published as a suite of composable loader modules offering consistent APIs and features across file formats, and offers advanced features such as running loaders on workers and incremental parsing, and all loaders work in both the browser and in Node.js."),(0,o.kt)("p",null,"By design, other ",(0,o.kt)("a",{parentName:"p",href:"https://vis.gl/frameworks"},"vis.gl frameworks")," such as ",(0,o.kt)("a",{parentName:"p",href:"https://deck.gl"},"deck.gl")," and ",(0,o.kt)("a",{parentName:"p",href:"https://luma.gl"},"luma.gl")," integrate seamlessly with loaders.gl, however loaders.gl itself has no dependencies on those frameworks, and all loaders and writers can be used with any JavaScript application or framework."),(0,o.kt)("h2",{id:"loaders"},"Loaders"),(0,o.kt)("p",null,"loaders.gl provides a wide selection of loaders organized into categories:"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Category"),(0,o.kt)("th",{parentName:"tr",align:null},"Loaders"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"docs/specifications/category-table"},"Table Loaders")),(0,o.kt)("td",{parentName:"tr",align:null},"Streaming tabular loaders for ",(0,o.kt)("a",{parentName:"td",href:"modules/csv/docs/api-reference/csv-loader"},"CSV"),", ",(0,o.kt)("a",{parentName:"td",href:"modules/json/docs/api-reference/json-loader"},"JSON"),", ",(0,o.kt)("a",{parentName:"td",href:"modules/arrow/docs/api-reference/arrow-loader"},"Arrow")," etc")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"docs/specifications/category-gis"},"Geospatial Loaders")),(0,o.kt)("td",{parentName:"tr",align:null},"Loaders for geospatial formats such as ",(0,o.kt)("a",{parentName:"td",href:"(/docs/modules/json/api-reference/geojson-loader)"},"GeoJSON")," ",(0,o.kt)("a",{parentName:"td",href:"modules/kml/docs/api-reference/kml-loader"},"KML"),", ",(0,o.kt)("a",{parentName:"td",href:"modules/wkt/docs/api-reference/wkt-loader"},"WKT/WKB"),", ",(0,o.kt)("a",{parentName:"td",href:"modules/mvt/docs/api-reference/mvt-loader"},"Mapbox Vector Tiles")," etc.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"docs/specifications/category-image"},"Image Loaders")),(0,o.kt)("td",{parentName:"tr",align:null},"Loaders for ",(0,o.kt)("a",{parentName:"td",href:"modules/images/docs/api-reference/image-loader"},"images"),", ",(0,o.kt)("a",{parentName:"td",href:"modules/textures/docs/api-reference/compressed-texture-loader"},"compressed textures"),", ",(0,o.kt)("a",{parentName:"td",href:"modules/textures/docs/api-reference/basis-loader"},"supercompressed textures (Basis)"),". Utilities for ",(0,o.kt)("a",{parentName:"td",href:"/docs/modules/images/api-reference/load-image-array"},"mipmapped arrays"),", ",(0,o.kt)("a",{parentName:"td",href:"/docs/modules/images/api-reference/load-image-cube"},"cubemaps"),", ",(0,o.kt)("a",{parentName:"td",href:"modules/images/docs/api-reference/binary-image-api"},"binary images")," and more.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"docs/specifications/category-mesh"},"Pointcloud and Mesh Loaders")),(0,o.kt)("td",{parentName:"tr",align:null},"Loaders for point cloud and simple mesh formats such as ",(0,o.kt)("a",{parentName:"td",href:"modules/draco/docs/api-reference/draco-loader"},"Draco"),", ",(0,o.kt)("a",{parentName:"td",href:"modules/las/docs/api-reference/las-loader"},"LAS"),", ",(0,o.kt)("a",{parentName:"td",href:"modules/pcd/docs/api-reference/pcd-loader"},"PCD"),", ",(0,o.kt)("a",{parentName:"td",href:"modules/ply/docs/api-reference/ply-loader"},"PLY"),", ",(0,o.kt)("a",{parentName:"td",href:"modules/obj/docs/api-reference/obj-loader"},"OBJ"),", and ",(0,o.kt)("a",{parentName:"td",href:"modules/terrain/docs/api-reference/terrain-loader"},"Terrain"),".")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"docs/specifications/category-scenegraph"},"Scenegraph Loaders")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"modules/gltf/docs/api-reference/gltf-loader"},"glTF")," loader")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"docs/specifications/category-3d-tiles"},"Tiled Data Loaders")),(0,o.kt)("td",{parentName:"tr",align:null},"Loaders for 3D tile formats such as ",(0,o.kt)("a",{parentName:"td",href:"/docs/modules/3d-tiles/api-reference/tile-3d-loader"},"3D Tiles"),", ",(0,o.kt)("a",{parentName:"td",href:"/docs/modules/i3s/api-reference/i3s"},"I3S")," and potree")))),(0,o.kt)("h2",{id:"code-examples"},"Code Examples"),(0,o.kt)("p",null,"loaders.gl provides a small core API module with common functions to load and save data, and a range of optional modules that provide loaders and writers for specific file formats."),(0,o.kt)("p",null,"A minimal example using the ",(0,o.kt)("inlineCode",{parentName:"p"},"load")," function and the ",(0,o.kt)("inlineCode",{parentName:"p"},"CSVLoader")," to load a CSV formatted table into a JavaScript array:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"import {load} from '@loaders.gl/core';\nimport {CSVLoader} from '@loaders.gl/csv';\n\nconst data = await load('data.csv', CSVLoader);\n\nfor (const row of data) {\n  console.log(JSON.stringify(row)); // => '{header1: value1, header2: value2}'\n}\n")),(0,o.kt)("p",null,'Streaming parsing is available using ES2018 async iterators, e.g. allowing "larger than memory" files to be incrementally processed:'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"import {loadInBatches} from '@loaders.gl/core';\nimport {CSVLoader} from '@loaders.gl/csv';\n\nfor await (const batch of await loadInBatches('data.csv', CSVLoader)) {\n  for (const row of batch) {\n    console.log(JSON.stringify(row)); // => '{header1: value1, header2: value2}'\n  }\n}\n")),(0,o.kt)("p",null,"To quickly get up to speed on how the loaders.gl API works, please see ",(0,o.kt)("a",{parentName:"p",href:"docs/developer-guide/get-started"},"Get Started"),"."),(0,o.kt)("h2",{id:"supported-platforms"},"Supported Platforms"),(0,o.kt)("p",null,"loaders.gl provides consistent support for both browsers and Node.js. The following platforms are supported:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Evergreen Browsers")," loaders.gl supports recent versions of the major evergreen browsers (e.g. Chrome, Firefox, Safari) on both desktop and mobile."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Node.js")," LTS (Long-Term Support) ",(0,o.kt)("a",{parentName:"li",href:"https://nodejs.org/en/about/releases/"},"releases")," are also supported. Note that the ",(0,o.kt)("inlineCode",{parentName:"li"},"@loaders.gl/polyfills")," module should be imported under Node.js. It installs the required Node.js polyfills for ",(0,o.kt)("inlineCode",{parentName:"li"},"fetch")," etc."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"IE11")," is no longer officially supported from v3.0, however loaders.gl 2.3 is known to run on IE11.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"To run on IE11, both ",(0,o.kt)("inlineCode",{parentName:"li"},"@loaders.gl/polyfills")," and additional appropriate polyfills (e.g. babel polyfills) need to be installed which will increase your application bundle size."),(0,o.kt)("li",{parentName:"ul"},"Note that because of lack of regular testing on IE11, regressions can occur, so pinning your loaders.gl versions in package.json is advisable."),(0,o.kt)("li",{parentName:"ul"},"For IE11, additional transpilation of loaders.gl packages in your ",(0,o.kt)("inlineCode",{parentName:"li"},"node_modules")," folder may also be required.")))),(0,o.kt)("h2",{id:"design-goals"},"Design Goals"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Framework Agnostic")," - Files are parsed into clearly documented data structures (objects + typed arrays) that can be used with any JavaScript framework."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Streaming Support")," - Several loaders can parse in batches from both node and browser ",(0,o.kt)("inlineCode",{parentName:"p"},"Stream"),'s, allowing "larger than memory" files to be processed, and initial results to be available while the remainder of a file is still loading.'),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Browser Support")," - loaders.gl supports recent versions of evergreen browsers."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Worker Support")," - Many loaders.gl loaders are automatically run in web workers, keeping the main thread free for other tasks while parsing completes."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Node Support")," - All loaders work under Node.js and can be used when writing backend and cloud services, and when running your unit tests under Node."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Loader Categories"),' - loaders.gl groups similar data formats into "categories". loaders in the same category return parsed data in "standardized" form, making it easier to build applications that can handle multiple similar file formats.'),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Format Autodection")," - Applications can specify multiple loaders when parsing a file, and loaders.gl will automatically pick the right loader for a given file based on a combination of file/url extensions, MIME types and initial data bytes."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Bundle Size Reduction")," - Loaders for each file format are published in independent npm modules to allow applications to cherry-pick only the loaders it needs. In addition, modules are optimized for tree-shaking, and many larger loader libraries and web workers are loaded from CDN on use and not included in your application bundle."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Modern JavaScript")," - loaders.gl is written in standard ES2018 and the API emphasizes modern, portable JavaScript constructs, e.g. async iterators instead of streams, ",(0,o.kt)("inlineCode",{parentName:"p"},"ArrayBuffer")," instead of ",(0,o.kt)("inlineCode",{parentName:"p"},"Buffer"),", etc."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Binary Data")," - loaders.gl is optimized to load into compact memory representations and use with WebGL frameworks (e.g. by returning typed arrays whenever possible). Note that in spite of the ",(0,o.kt)("inlineCode",{parentName:"p"},".gl")," naming, loaders.gl has no any actual WebGL dependencies and loaders can be used without restrictions in non-WebGL applications."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Multi-Asset Loading")," - Some formats like glTF, Shapefile, or mip mapped / cube textures can require dozens of separate loads to resolve all linked assets (external buffers, images etc). Tracking all the resulting async loads can cause complications for applications. By default, loaders.gl loads all linked assets before resolving the returned ",(0,o.kt)("inlineCode",{parentName:"p"},"Promise"),"."),(0,o.kt)("h2",{id:"licenses"},"Licenses"),(0,o.kt)("p",null,"loaders.gl itself is MIT licensed but various modules contain code under several permissive open source licenses, currently MIT, BSD and Apache licenses. Each loader module comes with its own license, so if the distinction matters to you, please check the documentation for each module and decide accordingly, however loaders.gl will never include code with non-permissive, commercial or copyLeft licenses."),(0,o.kt)("h2",{id:"credits-and-attributions"},"Credits and Attributions"),(0,o.kt)("p",null,"loaders.gl is maintained by a group of organizations collaborating through open governance under the Linux Foundation."),(0,o.kt)("p",null,"While loaders.gl contains a lot of original code, it is also partly a repackaging of superb work done by others in the open source community. We try to be as explicit as we can about the origins and attributions of each piece of code, both in the documentation page for each module and in the preservation of comments relating to authorship and contributions inside forked source code."),(0,o.kt)("p",null,"Even so, we can make mistakes, and we may not have the full history of the code we are reusing. If you think that we have missed something, or that we could do better in regard to attribution, please let us know."),(0,o.kt)("h3",{id:"primary-maintainers"},"Primary maintainers"),(0,o.kt)("p",null,"The organizations and individuals that contribute most significantly to the development and maintenance of loaders.gl are:"),(0,o.kt)("p",{style:{marginLeft:30,marginRight:"auto"}},(0,o.kt)("a",{href:"https://studio.foursquare.com"},(0,o.kt)("img",{height:"80",src:"https://raw.githubusercontent.com/visgl/deck.gl-data/master/images/logos/Foursquare.svg"})),(0,o.kt)("br",null),(0,o.kt)("br",null),(0,o.kt)("a",{href:"https://carto.com"},(0,o.kt)("img",{height:"80",src:"https://raw.githubusercontent.com/visgl/deck.gl-data/master/images/logos/carto.svg"}))),(0,o.kt)("h2",{id:"open-governance"},"Open Governance"),(0,o.kt)("p",null,"loaders.gl is a part of the ",(0,o.kt)("a",{href:"https://vis.gl"},(0,o.kt)("b",null,"vis.gl framework suite")),", an open governance Linux Foundation project that is developed collaboratively by multiple organizations and individuals and the Urban Computing Foundation."),(0,o.kt)("a",{href:"https://vis.gl"},(0,o.kt)("img",{height:"30",src:"https://raw.githubusercontent.com/visgl/deck.gl-data/master/images/logos/openjsf-color-textg.png"}),(0,o.kt)("span",{style:{paddingLeft:50}}),(0,o.kt)("img",{height:"30",src:"https://raw.githubusercontent.com/visgl/deck.gl-data/master/images/logos/vis-logo.png"})))}m.isMDXComponent=!0}}]);