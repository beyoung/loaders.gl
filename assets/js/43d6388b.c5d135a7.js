"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[8152],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=c(r),m=o,f=u["".concat(s,".").concat(m)]||u[m]||d[m]||a;return r?n.createElement(f,l(l({ref:t},p),{},{components:r})):n.createElement(f,l({ref:t},p))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,l=new Array(a);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[u]="string"==typeof e?e:o,l[1]=i;for(var c=2;c<a;c++)l[c]=r[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},96985:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var n=r(83117),o=(r(67294),r(3905));const a={},l="Build Instructions",i={unversionedId:"modules/tile-converter/api-reference/build-instructions",id:"modules/tile-converter/api-reference/build-instructions",title:"Build Instructions",description:"Following steps are for running converter right on a repository branch. It might be helpful if latest changes from any repository branch are needed. E.g. if latest master branch has some important updates in tile-converter module or other module that tile converter module depends on, a user can run it. It doesn't need to wait for new release.",source:"@site/../docs/modules/tile-converter/api-reference/build-instructions.md",sourceDirName:"modules/tile-converter/api-reference",slug:"/modules/tile-converter/api-reference/build-instructions",permalink:"/docs/modules/tile-converter/api-reference/build-instructions",draft:!1,editUrl:"https://github.com/uber-web/loaders.gl/tree/master/website/../docs/modules/tile-converter/api-reference/build-instructions.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"I3SConverter class",permalink:"/docs/modules/tile-converter/api-reference/i3s-converter"},next:{title:"tile-converter-bundle",permalink:"/docs/modules/tile-converter/api-reference/tile-converter-bundle"}},s={},c=[{value:"Advanced",id:"advanced",level:3}],p={toc:c},u="wrapper";function d(e){let{components:t,...r}=e;return(0,o.kt)(u,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"build-instructions"},"Build Instructions"),(0,o.kt)("p",{class:"badges"},(0,o.kt)("img",{src:"https://img.shields.io/badge/From-v3.0-blue.svg?style=flat-square",alt:"From-v3.0"})),(0,o.kt)("p",null,"Following steps are for running converter right on a repository branch. It might be helpful if latest changes from any repository branch are needed. E.g. if latest ",(0,o.kt)("inlineCode",{parentName:"p"},"master")," branch has some important updates in ",(0,o.kt)("inlineCode",{parentName:"p"},"tile-converter")," module or other module that ",(0,o.kt)("inlineCode",{parentName:"p"},"tile converter")," module depends on, a user can run it. It doesn't need to wait for new release."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Using ",(0,o.kt)("a",{parentName:"p",href:"https://yarnpkg.com/getting-started/install"},"yarn")," instead of npm is recommended because it is general practice in vis.gl repos;")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Clone the repository"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"git clone git@github.com:visgl/loaders.gl.git\ncd loaders.gl\n")),(0,o.kt)("ol",{start:3},(0,o.kt)("li",{parentName:"ol"},"Build modules")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"yarn bootstrap\n")),(0,o.kt)("ol",{start:4},(0,o.kt)("li",{parentName:"ol"},"Install default Earth Gravity Model dependency:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"npx tile-converter --install-dependencies\n")),(0,o.kt)("p",null,"You can use custom Earth Gravity Model using ",(0,o.kt)("inlineCode",{parentName:"p"},"--egm")," option."),(0,o.kt)("ol",{start:5},(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"modules/tile-converter/docs/cli-reference/tile-converter"},"Convert some tileset"),"\nExamples:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"npx tile-converter --input-type 3dtiles --tileset ./modules/3d-tiles/test/data/Batched/BatchedTextured/tileset.json --name BatchedTextured\nnpx tile-converter --input-type 3dtiles --tileset https://assets.cesium.com/29328/tileset.json --name CairoLayer --max-depth 10\n")),(0,o.kt)("p",null,"Notice \"--max-depth\" option. It means that the converter will load and convert only first 'n' (10 in example) levels of tiles. Use it for big tilesets when full conversion could take a lot of time. If you want to convert all the tileset, omit this option."),(0,o.kt)("ol",{start:6},(0,o.kt)("li",{parentName:"ol"},"I3S layers can be used only as http service. There is local server to handle i3s layer")),(0,o.kt)("p",null,'After conversion there are new i3s layers in output (default: "data") directory. Run it with the local web server:'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'I3sLayerPath="./data/CairoLayer" DEBUG=i3s-server:* npx i3s-server\n')),(0,o.kt)("ol",{start:7},(0,o.kt)("li",{parentName:"ol"},"Show converted layer on a map.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"open https://loaders.gl/examples/i3s?url=http://localhost/SceneServer/layers/0\n")),(0,o.kt)("h3",{id:"advanced"},"Advanced"),(0,o.kt)("p",null,"A. To show converted layer in a locally built loaders.gl example."),(0,o.kt)("p",null,"Run the front-end application from examples"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"cd examples/website/i3s\nyarn\nMapboxAccessToken=<TOKEN> yarn start-local\n")),(0,o.kt)("p",null,"B. To run a custom layer in a web-browser manually"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"http://localhost:8080/?url=http://localhost/layers/0\n")))}d.isMDXComponent=!0}}]);