"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[4318],{47054:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>n,toc:()=>c});var i=r(85893),o=r(11151);const s={},a="Attribute-driven colorization",n={id:"modules/i3s/recipes/attribute-driven-colorization",title:"Attribute-driven colorization",description:"In I3S, a feature represents a real-world object within a node. For example, a building within a 3D object scene layer. Node resources such as geometry buffer and attributes can belong to a feature and can be accessed by an object-ID.",source:"@site/../docs/modules/i3s/recipes/attribute-driven-colorization.md",sourceDirName:"modules/i3s/recipes",slug:"/modules/i3s/recipes/attribute-driven-colorization",permalink:"/docs/modules/i3s/recipes/attribute-driven-colorization",draft:!1,unlisted:!1,editUrl:"https://github.com/visgl/loaders.gl/tree/master/website/../docs/modules/i3s/recipes/attribute-driven-colorization.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"I3S Building Scene Layer (BSL)",permalink:"/docs/modules/i3s/recipes/building-scene-layer"},next:{title:"Overview",permalink:"/docs/modules/core/"}},l={},c=[{value:"Find out layer&#39;s attributes",id:"find-out-layers-attributes",level:2},{value:"Setup colorization scale",id:"setup-colorization-scale",level:2},{value:"Use I3SLoader with <code>colorsByAttribute</code> option",id:"use-i3sloader-with-colorsbyattribute-option",level:2},{value:"Colorization mode",id:"colorization-mode",level:2}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",img:"img",p:"p",pre:"pre",...(0,o.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"attribute-driven-colorization",children:"Attribute-driven colorization"}),"\n",(0,i.jsx)("p",{class:"badges",children:(0,i.jsx)("img",{src:"https://img.shields.io/badge/From-v3.4-blue.svg?style=flat-square",alt:"From-v3.4"})}),"\n",(0,i.jsx)(t.p,{children:"In I3S, a feature represents a real-world object within a node. For example, a building within a 3D object scene layer. Node resources such as geometry buffer and attributes can belong to a feature and can be accessed by an object-ID."}),"\n",(0,i.jsxs)(t.p,{children:["In terms of geometry, every vertex of a mesh is associated with some feature. At the same time, every feature is associated with feature attribute values. For example, there might be ",(0,i.jsx)(t.code,{children:"HEIGHT"})," attribute that stores roof height information about every building."]}),"\n",(0,i.jsx)(t.p,{children:"All that means that it is possible to make some visual effects related to attribute value. It might be text labels, colors, opacity etc."}),"\n",(0,i.jsx)(t.p,{children:"From 3.4 version loaders.gl provides attributes colorization capability that allows colorization of node mesh by some attribute value."}),"\n",(0,i.jsxs)(t.p,{children:["The complete case of attributes colorization is done in ",(0,i.jsx)(t.a,{href:"https://i3s.loaders.gl/viewer?tileset=new-york",children:"I3S Explorer"}),". It is an open source ReactJS application. See source code on ",(0,i.jsx)(t.a,{href:"https://github.com/visgl/loaders.gl-showcases",children:"GitHub"}),"."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"I3S New York dataset colorized by height roof",src:r(89634).Z+"",width:"1975",height:"740"})}),"\n",(0,i.jsx)(t.h2,{id:"find-out-layers-attributes",children:"Find out layer's attributes"}),"\n",(0,i.jsx)(t.p,{children:"It is necessary to pick some attribute to colorize a layer by. So it is necessary to load the layer JSON:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-javascript",children:"import {load} from '@loaders.gl/core';\r\nimport {I3SLoader} from '@loaders.gl/i3s';\r\n\r\nconst i3sLayer = await load(url, I3SBuildingSceneLayerLoader);\n"})}),"\n",(0,i.jsxs)(t.p,{children:["List and types of attributes might be taken from ",(0,i.jsx)(t.a,{href:"https://github.com/Esri/i3s-spec/blob/master/docs/1.9/field.cmn.md",children:(0,i.jsx)(t.code,{children:"i3sLayer.fields"})})," and ",(0,i.jsx)(t.a,{href:"https://github.com/Esri/i3s-spec/blob/master/docs/1.8/attributeStorageInfo.cmn.md",children:(0,i.jsx)(t.code,{children:"i3sLayer.attributeStorageInfo"})})," properties."]}),"\n",(0,i.jsx)(t.h2,{id:"setup-colorization-scale",children:"Setup colorization scale"}),"\n",(0,i.jsx)(t.p,{children:"Attributes colorization capability applies linear color gradient. To create this gradient attribute values range is required."}),"\n",(0,i.jsxs)(t.p,{children:["To get minimum and maximum attribute values ",(0,i.jsx)(t.a,{href:"https://github.com/Esri/i3s-spec/blob/master/docs/1.9/statisticsInfo.cmn.md",children:"statistics"})," can be used. The ",(0,i.jsx)(t.a,{href:"https://github.com/Esri/i3s-spec/blob/master/docs/1.9/statsInfo.cmn.md",children:"statistics info JSON"})," has min and max values. Usage of those values allows setting true attribute values range not clamping extremum values."]}),"\n",(0,i.jsx)(t.p,{children:"As soon as statistics info is stored in separate resources, it has to be loaded in a separate request. Statistics is just a JSON data and can be loaded with JSONLoader:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-javascript",children:"import {load} from '@loaders.gl/core';\r\nimport {JSONLoader} from '@loaders.gl/loader-utils';\r\n\r\nconst attributeStats = await load(`${url}/statistics/f_5/0`, JSONLoader);\n"})}),"\n",(0,i.jsxs)(t.h2,{id:"use-i3sloader-with-colorsbyattribute-option",children:["Use I3SLoader with ",(0,i.jsx)(t.code,{children:"colorsByAttribute"})," option"]}),"\n",(0,i.jsxs)(t.p,{children:["To colorize a dataset I3SLoader has to be used with ",(0,i.jsx)(t.code,{children:"colorsByAttribute"})," option:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'  import { StaticMap } from "react-map-gl";\r\n  import DeckGL from "@deck.gl/react";\r\n  import { Tile3DLayer } from "@deck.gl/geo-layers";\r\n  import { I3SLoader } from "@loaders.gl/i3s";\r\n\r\n  function renderLayer() {\r\n    const loadOptions = {\r\n      i3s: {\r\n        colorsByAttribute: {\r\n          attributeName,\r\n          minValue: statistics.min,\r\n          maxValue: statistics.max,\r\n          minColor: [146, 146, 252, 255], // #9292FC\r\n          maxColor: [44, 44, 175, 255], // #2C2CAF\r\n        },\r\n      },\r\n    };\r\n    return new Tile3DLayer({\r\n      id: `tile3d-layer-${layer.id}`,\r\n      data: url,\r\n      loader: I3SLoader,\r\n      loadOptions,\r\n    });\r\n  }\r\n\r\n  <DeckGL\r\n    id={id}\r\n    layers={renderLayers()}\r\n    viewState={viewState}\r\n    onViewStateChange={onViewStateChangeHandler}\r\n  >\r\n    <StaticMap reuseMaps mapStyle={mapStyle} />\r\n  </DeckGL>\n'})}),"\n",(0,i.jsx)(t.h2,{id:"colorization-mode",children:"Colorization mode"}),"\n",(0,i.jsx)(t.p,{children:"Attributes colorization capability can work in 2 modes: 'replace' and 'multiply'."}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"replace"})," mode. Attribute-based colors replace geometry vertex colors. This is the default mode."]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"multiply"})," mode. Attribute-based colors multiply with geometry vertex colors."]}),"\n",(0,i.jsx)(t.p,{children:"Usage example:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-javascript",children:"function renderLayer() {\r\n  const loadOptions = {\r\n    i3s: {\r\n      colorsByAttribute: {\r\n        attributeName,\r\n        minValue: statistics.min,\r\n        maxValue: statistics.max,\r\n        minColor: [146, 146, 252, 255], // #9292FC\r\n        maxColor: [44, 44, 175, 255], // #2C2CAF\r\n        mode: 'multiply' // or 'replace'\r\n      }\r\n    }\r\n  };\r\n  return new Tile3DLayer({\r\n    id: `tile3d-layer-${layer.id}`,\r\n    data: url,\r\n    loader: I3SLoader,\r\n    loadOptions\r\n  });\r\n}\n"})})]})}function u(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},89634:(e,t,r)=>{r.d(t,{Z:()=>i});const i=r.p+"assets/images/i3s-new-york-colorize-by-heightroof-fc2b0f1402a6dce50445432ea713df1c.png"},11151:(e,t,r)=>{r.d(t,{Z:()=>n,a:()=>a});var i=r(67294);const o={},s=i.createContext(o);function a(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function n(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);