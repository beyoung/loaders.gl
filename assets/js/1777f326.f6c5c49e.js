"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[4997],{30699:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>t,default:()=>p,frontMatter:()=>i,metadata:()=>c,toc:()=>a});var s=r(85893),o=r(11151);const i={},t="Roadmap",c={id:"roadmap",title:"Roadmap",description:"v4.0",source:"@site/../docs/roadmap.md",sourceDirName:".",slug:"/roadmap",permalink:"/docs/roadmap",draft:!1,unlisted:!1,editUrl:"https://github.com/visgl/loaders.gl/tree/master/website/../docs/roadmap.md",tags:[],version:"current",frontMatter:{}},l={},a=[{value:"v4.0",id:"v40",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"roadmap",children:"Roadmap"}),"\n",(0,s.jsx)(n.h2,{id:"v40",children:"v4.0"}),"\n",(0,s.jsx)(n.p,{children:"loaders.gl is developed under open governance by multiple contributors.\nWhile it is hard to catalog all ongoing work, current development tracks and aspirations include:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["New loaders: ",(0,s.jsx)(n.code,{children:"GeoTIFFLoader"}),", ",(0,s.jsx)(n.code,{children:"ZarrLoader"}),", ",(0,s.jsx)(n.code,{children:"AVROLoader"}),","]}),"\n",(0,s.jsxs)(n.li,{children:["More comprehensive support for ",(0,s.jsx)(n.code,{children:"options.shape"})," to control the output format of loaders."]}),"\n",(0,s.jsxs)(n.li,{children:["More gLTF Extensions: ",(0,s.jsx)(n.code,{children:"EXT_mesh_features"})," and ",(0,s.jsx)(n.code,{children:"EXT_structural_metadata"})," for 1.1 3D Tiles attributes support"]}),"\n",(0,s.jsx)(n.li,{children:"I3S: feature completeness and performance"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"ffmpeg"})," WASM integration for ",(0,s.jsx)(n.code,{children:"@loaders.gl/video"})]}),"\n",(0,s.jsx)(n.li,{children:"EcmaScript module support"}),"\n",(0,s.jsx)(n.li,{children:"Unbundled loaders."}),"\n",(0,s.jsxs)(n.li,{children:["Replace ",(0,s.jsx)(n.code,{children:"Schema"})," class with arrow schema if arrowjs tree-shaking improvements are satisfactory."]}),"\n",(0,s.jsx)(n.li,{children:"Node v18 support (as Node 16 is close to it's support end)"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"tile-converter functional extension"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u0421onversion of S2 bounding volume to Oriented Bounding Boxes format (OBB)"}),"\n",(0,s.jsx)(n.li,{children:"Support conversion of non-indexed geometry"}),"\n",(0,s.jsx)(n.li,{children:"3DTiles Implicit tiling 1.1 support"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/Maxar-Corp/3tz-specification/tree/main",children:".3tz"})," (3DTiles archive format) support for conversion into I3S"]}),"\n",(0,s.jsxs)(n.li,{children:["Better SLPK (I3S archive format) support:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Support Large SLPK (>2gb) input for tile-converter"}),"\n",(0,s.jsx)(n.li,{children:"Hash generation for SLPKs"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"i3s-server"})," (part of tile-converter npm package) - serve SLPKs as a local HTTP server"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"slpk-extractor"})," (part of tile-converter npm package) - extract an SLPK to a dataset that can be served via ",(0,s.jsx)(n.code,{children:"i3s-server"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Pre-processing for conversion 3DTiles > I3S:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Detect topology type (for example TRIANGLE and TRIANGLE_STRIP will pass further for conversion, POINT or TRIANGLE_FAN will notify this mesh type is not supported for conversion)"}),"\n",(0,s.jsxs)(n.li,{children:["Detect attributes classes for ",(0,s.jsx)(n.code,{children:"EXT_feature_metadata"})," and for ",(0,s.jsx)(n.code,{children:"EXT_mesh_features"})," extensions. Choose a class to convert in CLI with arrow keys."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"tile-converter performance and usability optimizations"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Exclude Tileset 3D and Tile 3D classes during conversion (it gives a RAM usage improvement)"}),"\n",(0,s.jsx)(n.li,{children:"Tile-converter: offline conversion. No internet is required during the conversion process"}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},11151:(e,n,r)=>{r.d(n,{Z:()=>c,a:()=>t});var s=r(67294);const o={},i=s.createContext(o);function t(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);