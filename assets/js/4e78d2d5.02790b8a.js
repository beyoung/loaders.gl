"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[9165],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var n=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(r),d=i,m=u["".concat(s,".").concat(d)]||u[d]||f[d]||o;return r?n.createElement(m,a(a({ref:t},p),{},{components:r})):n.createElement(m,a({ref:t},p))}));function m(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:i,a[1]=l;for(var c=2;c<o;c++)a[c]=r[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},58165:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>f,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var n=r(83117),i=(r(67294),r(3905));const o={},a="writeFile",l={unversionedId:"modules/core/api-reference/write-file",id:"modules/core/api-reference/write-file",title:"writeFile",description:"A file save utilities that (attempts to) work consistently across browser and node.",source:"@site/../docs/modules/core/api-reference/write-file.md",sourceDirName:"modules/core/api-reference",slug:"/modules/core/api-reference/write-file",permalink:"/docs/modules/core/api-reference/write-file",draft:!1,editUrl:"https://github.com/uber-web/loaders.gl/tree/master/website/../docs/modules/core/api-reference/write-file.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"fetchFile",permalink:"/docs/modules/core/api-reference/fetch-file"},next:{title:"setPathPrefix",permalink:"/docs/modules/core/api-reference/set-path-prefix"}},s={},c=[{value:"Usage",id:"usage",level:2},{value:"Functions",id:"functions",level:2},{value:"writeFile(url : String , options : Object) : Promise.ArrayBuffer",id:"writefileurl--string--options--object--promisearraybuffer",level:3},{value:"writeFileSync(url : String , options : Object) : ArrayBuffer",id:"writefilesyncurl--string--options--object--arraybuffer",level:3},{value:"Remarks",id:"remarks",level:2}],p={toc:c},u="wrapper";function f(e){let{components:t,...r}=e;return(0,i.kt)(u,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"writefile"},"writeFile"),(0,i.kt)("p",null,"A file save utilities that (attempts to) work consistently across browser and node."),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"import {writeFile} from '@loaders.gl/core';\nimport {DracoWriter} from '@loaders.gl/draco';\n\nawait writeFile(url, DracoWriter);\n")),(0,i.kt)("h2",{id:"functions"},"Functions"),(0,i.kt)("h3",{id:"writefileurl--string--options--object--promisearraybuffer"},"writeFile(url : String ","[, options : Object]",") : Promise.ArrayBuffer"),(0,i.kt)("p",null,"Reads the raw data from a file asynchronously."),(0,i.kt)("p",null,"Notes:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Any path prefix set by ",(0,i.kt)("inlineCode",{parentName:"li"},"setPathPrefix")," will be appended to relative urls.")),(0,i.kt)("h3",{id:"writefilesyncurl--string--options--object--arraybuffer"},"writeFileSync(url : String ","[, options : Object]",") : ArrayBuffer"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Only works on Node.js or using data URLs.")),(0,i.kt)("p",null,'Reads the raw data from a "file" synchronously.'),(0,i.kt)("p",null,"Notes:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Any path prefix set by ",(0,i.kt)("inlineCode",{parentName:"li"},"setPathPrefix")," will be appended to relative urls.")),(0,i.kt)("h2",{id:"remarks"},"Remarks"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The use of the loaders.gl ",(0,i.kt)("inlineCode",{parentName:"li"},"writeFile")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"writeFileAsync")," functions is optional, loaders.gl loaders can be used with any data loaded via any mechanism the application prefers, e.g. ",(0,i.kt)("inlineCode",{parentName:"li"},"fetch"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"XMLHttpRequest")," etc."),(0,i.kt)("li",{parentName:"ul"},'The "path prefix" support is intentended to be a simple mechanism to support certain work-arounds. It is intended to help e.g. in situations like getting test cases to load data from the right place, but was never intended to support general application use cases.')))}f.isMDXComponent=!0}}]);