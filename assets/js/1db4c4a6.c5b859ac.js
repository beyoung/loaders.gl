"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[3970],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>f});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var d=n.createContext({}),s=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},p=function(e){var t=s(e.components);return n.createElement(d.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,d=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=s(a),m=r,f=c["".concat(d,".").concat(m)]||c[m]||u[m]||o;return a?n.createElement(f,l(l({ref:t},p),{},{components:a})):n.createElement(f,l({ref:t},p))}));function f(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,l=new Array(o);l[0]=m;var i={};for(var d in t)hasOwnProperty.call(t,d)&&(i[d]=t[d]);i.originalType=e,i[c]="string"==typeof e?e:r,l[1]=i;for(var s=2;s<o;s++)l[s]=a[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},24982:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var n=a(83117),r=(a(67294),a(3905));const o={},l="Creating New Loaders and Writers",i={unversionedId:"developer-guide/creating-loaders-and-writers",id:"developer-guide/creating-loaders-and-writers",title:"Creating New Loaders and Writers",description:"See the a detailed specification of the loader object format API reference.",source:"@site/../docs/developer-guide/creating-loaders-and-writers.md",sourceDirName:"developer-guide",slug:"/developer-guide/creating-loaders-and-writers",permalink:"/docs/developer-guide/creating-loaders-and-writers",draft:!1,editUrl:"https://github.com/uber-web/loaders.gl/tree/master/website/../docs/developer-guide/creating-loaders-and-writers.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Managing Dependencies",permalink:"/docs/developer-guide/dependencies"},next:{title:"Development Environment",permalink:"/docs/developer-guide/dev-env"}},d={},s=[{value:"Overview",id:"overview",level:2},{value:"Creating a Loader Object",id:"creating-a-loader-object",level:2},{value:"Dependency Management",id:"dependency-management",level:2},{value:"Creating Composite Loaders",id:"creating-composite-loaders",level:2},{value:"Calling loaders inside loaders",id:"calling-loaders-inside-loaders",level:2},{value:"Accessing the Response object",id:"accessing-the-response-object",level:2}],p={toc:s},c="wrapper";function u(e){let{components:t,...a}=e;return(0,r.kt)(c,(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"creating-new-loaders-and-writers"},"Creating New Loaders and Writers"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"See the a detailed specification of the ",(0,r.kt)("a",{parentName:"p",href:"docs/specifications/loader-object-format"},"loader object format API reference"),".")),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("p",null,"Applications can also create new loader objects. E.g. if you have existing JavaScript parsing functionality that you would like to use with the loaders.gl core utility functions."),(0,r.kt)("h2",{id:"creating-a-loader-object"},"Creating a Loader Object"),(0,r.kt)("p",null,"You would give a name to the loader object, define what file extension(s) it uses, and define a parser function."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"export default {\n  name: 'JSON',\n  extensions: ['json'],\n  testText: null,\n  parse: async (arrayBuffer) => await JSON.parse(new TextDecoder().decode(arrayBuffer),\n  parseTextSync: JSON.parse\n};\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"name")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Required"),(0,r.kt)("td",{parentName:"tr",align:null},"Short name of the loader ('OBJ', 'PLY' etc)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"extension")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Required"),(0,r.kt)("td",{parentName:"tr",align:null},"Three letter (typically) extension used by files of this format")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"testText")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Function")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"null")),(0,r.kt)("td",{parentName:"tr",align:null},"Guesses if a file is of this format by examining the first characters in the file")))),(0,r.kt)("p",null,"A loader must define a parser function for the format, a function that takes the loaded data and converts it into a parsed object."),(0,r.kt)("p",null,"Depending on how the underlying loader works (whether it is synchronous or asynchronous and whether it expects text or binary data), the loader object can expose the parser in a couple of different ways, specified by provided one of the parser function fields."),(0,r.kt)("h2",{id:"dependency-management"},"Dependency Management"),(0,r.kt)("p",null,'In general, it is recommended that loaders are "standalone" and avoid importing ',(0,r.kt)("inlineCode",{parentName:"p"},"@loaders.gl/core"),". ",(0,r.kt)("inlineCode",{parentName:"p"},"@loaders.gl/loader-utils")," provides a small set of shared loader utilities."),(0,r.kt)("h2",{id:"creating-composite-loaders"},"Creating Composite Loaders"),(0,r.kt)("p",null,'loaders.gl enables loaders to call other loaders (referred to as "sub-loaders" in this section). This enables loaders for "composite formats" to be "composed" out of loaders for the primitive parts.'),(0,r.kt)("p",null,"Good examples of sub-loaders are the ",(0,r.kt)("inlineCode",{parentName:"p"},"GLTFLoader")," which can delegate Draco mesh decoding to the ",(0,r.kt)("inlineCode",{parentName:"p"},"DracoLoader")," and image decoding to the various ",(0,r.kt)("inlineCode",{parentName:"p"},"ImageLoaders")," and the ",(0,r.kt)("inlineCode",{parentName:"p"},"BasisLoader"),"."),(0,r.kt)("p",null,"Naturally, Composite loaders can call other composite loaders, which is for instance used by the ",(0,r.kt)("inlineCode",{parentName:"p"},"Tiles3DLoader")," which uses the ",(0,r.kt)("inlineCode",{parentName:"p"},"GLTFLoader")," to parse embedded glTF data in certain tiles."),(0,r.kt)("h2",{id:"calling-loaders-inside-loaders"},"Calling loaders inside loaders"),(0,r.kt)("p",null,"To call another loader, a loader should use the appropriate ",(0,r.kt)("inlineCode",{parentName:"p"},"parse")," function provided in the ",(0,r.kt)("inlineCode",{parentName:"p"},"context")," parameter."),(0,r.kt)("p",null,"A conceptual example of a 3D Tiles loader calling the ",(0,r.kt)("inlineCode",{parentName:"p"},"GLTFLoader")," with some additional options."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"export async function parse3DTile(arrayBuffer, options, context) {\n  const tile = {};\n  // Extract embedded GLB (if present) into `tile.gltfArrayBuffer`\n  ...\n  if (tile.gltfArrayBuffer) {\n    const {parse} = context;\n    tile.gltf = await parse(tile.gltfArrayBuffer, GLTFLoader, {\n      gltf: {...}\n    });\n  }\n}\n")),(0,r.kt)("p",null,"Remarks:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"While a loader could potentially import ",(0,r.kt)("inlineCode",{parentName:"li"},"parse")," from ",(0,r.kt)("inlineCode",{parentName:"li"},"@loaders.gl/core")," to invoke a sub-loader, it is discouraged, not only from a dependency management reasons, but it prevents loaders.gl from properly handling parameters and allow worker-loaders to call other loaders.")),(0,r.kt)("h2",{id:"accessing-the-response-object"},"Accessing the Response object"),(0,r.kt)("p",null,"Loaders will often use the ",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API"},"fetch API")," to retrieve data. In most cases, a loader will only be concerned with the data payload, but in some cases it may be desirable to access the underlying ",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/Response"},"Response")," object, available on the ",(0,r.kt)("inlineCode",{parentName:"p"},"context")," parameter."),(0,r.kt)("p",null,"An example of accessing a HTTP header."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"export async function parseWithHeader(arrayBuffer, options, context) {\n  const {parse, response} = context;\n  const contentLength = response.headers.get('content-length');\n  const data = await parse(arrayBuffer, JSONLoader);\n}\n")))}u.isMDXComponent=!0}}]);