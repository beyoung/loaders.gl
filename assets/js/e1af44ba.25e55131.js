"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[1470],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>k});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=a.createContext({}),s=function(e){var t=a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},d=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,p=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),c=s(r),u=n,k=c["".concat(p,".").concat(u)]||c[u]||m[u]||l;return r?a.createElement(k,o(o({ref:t},d),{},{components:r})):a.createElement(k,o({ref:t},d))}));function k(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,o=new Array(l);o[0]=u;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[c]="string"==typeof e?e:n,o[1]=i;for(var s=2;s<l;s++)o[s]=r[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}u.displayName="MDXCreateElement"},25320:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>m,frontMatter:()=>l,metadata:()=>i,toc:()=>s});var a=r(87462),n=(r(67294),r(3905));const l={},o="WKTLoader",i={unversionedId:"modules/wkt/api-reference/wkt-loader",id:"modules/wkt/api-reference/wkt-loader",title:"WKTLoader",description:"ogc-logo",source:"@site/../docs/modules/wkt/api-reference/wkt-loader.md",sourceDirName:"modules/wkt/api-reference",slug:"/modules/wkt/api-reference/wkt-loader",permalink:"/docs/modules/wkt/api-reference/wkt-loader",draft:!1,editUrl:"https://github.com/visgl/loaders.gl/tree/master/website/../docs/modules/wkt/api-reference/wkt-loader.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"WKBWriter",permalink:"/docs/modules/wkt/api-reference/wkb-writer"},next:{title:"WKTWriter",permalink:"/docs/modules/wkt/api-reference/wkt-writer"}},p={},s=[{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"Options",id:"options",level:2},{value:"Attribution",id:"attribution",level:2}],d={toc:s},c="wrapper";function m(e){let{components:t,...l}=e;return(0,n.kt)(c,(0,a.Z)({},d,l,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"wktloader"},"WKTLoader"),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"ogc-logo",src:r(63411).Z,width:"119",height:"60"})),(0,n.kt)("p",{class:"badges"},(0,n.kt)("img",{src:"https://img.shields.io/badge/From-v2.1-blue.svg?style=flat-square",alt:"From-v2.1"})),(0,n.kt)("p",null,"Loader and writer for the ",(0,n.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry"},"Well-known text")," format for representation of geometry."),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Loader"),(0,n.kt)("th",{parentName:"tr",align:null},"Characteristic"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"File Extension"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},".wkt"),",")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"File Type"),(0,n.kt)("td",{parentName:"tr",align:null},"Text")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"File Format"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"https://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry"},"Well Known Text"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Data Format"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/specifications/category-gis"},"Geometry"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Supported APIs"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"load"),", ",(0,n.kt)("inlineCode",{parentName:"td"},"parse"),", ",(0,n.kt)("inlineCode",{parentName:"td"},"parseSync"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Decoder Type"),(0,n.kt)("td",{parentName:"tr",align:null},"Synchronous")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Worker Thread Support"),(0,n.kt)("td",{parentName:"tr",align:null},"Yes ",(0,n.kt)("a",{parentName:"td",href:"http://shields.io"},(0,n.kt)("img",{parentName:"a",src:"https://img.shields.io/badge/v2.2-blue.svg?style=flat-square",alt:"Website shields.io"})))))),(0,n.kt)("h2",{id:"installation"},"Installation"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @loaders.gl/wkt\nnpm install @loaders.gl/core\n")),(0,n.kt)("h2",{id:"usage"},"Usage"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"import {WKTLoader} from '@loaders.gl/wkt';\nimport {parseSync} from '@loaders.gl/core';\n\nconst data = parseSync('LINESTRING (30 10, 10 30, 40 40)', WKTLoader);\n// => {type: 'LineString', coordinates: [[30, 10], [10, 30], [40, 40]]}\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"import {WKTLoader} from '@loaders.gl/wkt';\nimport {load} from '@loaders.gl/core';\n\nconst data = await load(url, WKTLoader);\n")),(0,n.kt)("h2",{id:"options"},"Options"),(0,n.kt)("p",null,"N/A"),(0,n.kt)("h2",{id:"attribution"},"Attribution"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"WKTLoader")," is based on a fork of the Mapbox ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/mapbox/wellknown"},(0,n.kt)("inlineCode",{parentName:"a"},"wellknown"))," module under the ISC license (MIT/BSD 2-clause equivalent)."))}m.isMDXComponent=!0},63411:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/ogc-logo-60-8ee2c25a50ccc14293453512c707a0c4.png"}}]);