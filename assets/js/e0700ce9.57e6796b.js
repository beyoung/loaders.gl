"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[9038],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>h});var l=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,l)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,l,n=function(e,t){if(null==e)return{};var r,l,n={},a=Object.keys(e);for(l=0;l<a.length;l++)r=a[l],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(l=0;l<a.length;l++)r=a[l],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=l.createContext({}),p=function(e){var t=l.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=p(e.components);return l.createElement(s.Provider,{value:t},e.children)},v="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},d=l.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),v=p(r),d=n,h=v["".concat(s,".").concat(d)]||v[d]||u[d]||a;return r?l.createElement(h,i(i({ref:t},c),{},{components:r})):l.createElement(h,i({ref:t},c))}));function h(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,i=new Array(a);i[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[v]="string"==typeof e?e:n,i[1]=o;for(var p=2;p<a;p++)i[p]=r[p];return l.createElement.apply(null,i)}return l.createElement.apply(null,r)}d.displayName="MDXCreateElement"},91163:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>p});var l=r(87462),n=(r(67294),r(3905));const a={},i="I3S Server",o={unversionedId:"modules/tile-converter/cli-reference/i3s-server",id:"modules/tile-converter/cli-reference/i3s-server",title:"I3S Server",description:"I3S Server is a NodeJS HTTP service built on top of Express. It can serve I3S data from output path of tile-converter or from SLPK file container.",source:"@site/../docs/modules/tile-converter/cli-reference/i3s-server.md",sourceDirName:"modules/tile-converter/cli-reference",slug:"/modules/tile-converter/cli-reference/i3s-server",permalink:"/docs/modules/tile-converter/cli-reference/i3s-server",draft:!1,editUrl:"https://github.com/visgl/loaders.gl/tree/master/website/../docs/modules/tile-converter/cli-reference/i3s-server.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Tile Converter",permalink:"/docs/modules/tile-converter/cli-reference/tile-converter"},next:{title:"SLPK extractor",permalink:"/docs/modules/tile-converter/cli-reference/slpk-extractor"}},s={},p=[{value:"Installation",id:"installation",level:2},{value:"Serve the output data of <code>tile-converter</code>",id:"serve-the-output-data-of-tile-converter",level:2},{value:"Start HTTP server",id:"start-http-server",level:3},{value:"The layer should be available on URLs",id:"the-layer-should-be-available-on-urls",level:4},{value:"Open in ArcGIS",id:"open-in-arcgis",level:4},{value:"Open in I3S Explorer",id:"open-in-i3s-explorer",level:4},{value:"Serve SLPK",id:"serve-slpk",level:2},{value:"Start the server",id:"start-the-server",level:3},{value:"The layer should be available on URLs",id:"the-layer-should-be-available-on-urls-1",level:4},{value:"Open in ArcGIS",id:"open-in-arcgis-1",level:4},{value:"Open in I3S Explorer",id:"open-in-i3s-explorer-1",level:4},{value:"ENV variables",id:"env-variables",level:2}],c={toc:p},v="wrapper";function u(e){let{components:t,...r}=e;return(0,n.kt)(v,(0,l.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"i3s-server"},"I3S Server"),(0,n.kt)("p",{class:"badges"},(0,n.kt)("img",{src:"https://img.shields.io/badge/From-v4.0-blue.svg?style=flat-square",alt:"From-v4.0"}),(0,n.kt)("a",{href:"https://badge.fury.io/js/%40loaders.gl%2Ftile-converter"},(0,n.kt)("img",{src:"https://badge.fury.io/js/%40loaders.gl%2Ftile-converter.svg",alt:"npm version",height:"18"}))),(0,n.kt)("p",null,"I3S Server is a NodeJS HTTP service built on top of ",(0,n.kt)("a",{parentName:"p",href:"https://expressjs.com"},"Express"),". It can serve I3S data from output path of tile-converter or from SLPK file container."),(0,n.kt)("h2",{id:"installation"},"Installation"),(0,n.kt)("p",null,"The i3s-server is published as a part of ",(0,n.kt)("inlineCode",{parentName:"p"},"@loaders.gl/tile-converter")," library."),(0,n.kt)("p",null,"Create a new folder:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir tmp\ncd tmp\n")),(0,n.kt)("p",null,"Install ",(0,n.kt)("inlineCode",{parentName:"p"},"@loaders.gl/tile-converter")," package:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"npm i @loaders.gl/tile-converter\n")),(0,n.kt)("h2",{id:"serve-the-output-data-of-tile-converter"},"Serve the output data of ",(0,n.kt)("inlineCode",{parentName:"h2"},"tile-converter")),(0,n.kt)("p",null,"Convert 3DTiles tileset to I3S without ",(0,n.kt)("inlineCode",{parentName:"p"},"--slpk")," option:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"npx tile-converter --install-dependencies\nnpx tile-converter --input-type 3DTILES --tileset /path/to/tileset.json --name NewTileset\n")),(0,n.kt)("h3",{id:"start-http-server"},"Start HTTP server"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'PORT=8080 HTTPS_PORT=4443 I3sLayerPath="./data" DEBUG=i3s-server:* npx i3s-server\n')),(0,n.kt)("h4",{id:"the-layer-should-be-available-on-urls"},"The layer should be available on URLs"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"http://localhost:8080/NewTileset/SceneServer/layers/0")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"https://localhost:4443/NewTileset/SceneServer/layers/0"))),(0,n.kt)("h4",{id:"open-in-arcgis"},"Open in ArcGIS"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"https://www.arcgis.com/home/webscene/viewer.html?url=http://localhost:8080/NewTileset/SceneServer")),(0,n.kt)("h4",{id:"open-in-i3s-explorer"},"Open in I3S Explorer"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"https://i3s.loaders.gl/viewer?tileset=http://localhost:8080/NewTileset/SceneServer/layers/0")),(0,n.kt)("h2",{id:"serve-slpk"},"Serve SLPK"),(0,n.kt)("p",null,"Example for path ",(0,n.kt)("inlineCode",{parentName:"p"},"../datasets/Rancho_Mesh_mesh_v17_1.slpk"),":"),(0,n.kt)("h3",{id:"start-the-server"},"Start the server"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'PORT=8080 HTTPS_PORT=4443 I3sLayerPath="../datasets/Rancho_Mesh_mesh_v17_1.slpk" DEBUG=i3s-server:* npx i3s-server\n')),(0,n.kt)("h4",{id:"the-layer-should-be-available-on-urls-1"},"The layer should be available on URLs"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"http://localhost:8080/SceneServer/layers/0/...")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"https://localhost:4443/SceneServer/layers/0/..."))),(0,n.kt)("h4",{id:"open-in-arcgis-1"},"Open in ArcGIS"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"https://www.arcgis.com/home/webscene/viewer.html?url=http://localhost:8080/SceneServer")),(0,n.kt)("h4",{id:"open-in-i3s-explorer-1"},"Open in I3S Explorer"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"https://i3s.loaders.gl/viewer?tileset=http://localhost:8080/SceneServer/layers/0")),(0,n.kt)("h2",{id:"env-variables"},"ENV variables"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"I3sLayerPath")," - path to converted data or SLPK file."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"PORT")," - HTTP port. Eg for ",(0,n.kt)("inlineCode",{parentName:"li"},"PORT = 8080 npx i3s-server")," the server will work on host ",(0,n.kt)("inlineCode",{parentName:"li"},"http://localhost:8080/..."),". Default value is ",(0,n.kt)("inlineCode",{parentName:"li"},"80"),";"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"HTTPS_PORT")," - HTTPS port. Eg for ",(0,n.kt)("inlineCode",{parentName:"li"},"PORT = 4443 npx i3s-server")," the server will work on host ",(0,n.kt)("inlineCode",{parentName:"li"},"https://localhost:4443/..."),". Default value is ",(0,n.kt)("inlineCode",{parentName:"li"},"443"))))}u.isMDXComponent=!0}}]);