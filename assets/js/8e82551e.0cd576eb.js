"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[2737],{3905:(e,t,a)=>{a.d(t,{Zo:()=>i,kt:()=>p});var n=a(67294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function u(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?u(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):u(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function f(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},u=Object.keys(e);for(n=0;n<u.length;n++)a=u[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var u=Object.getOwnPropertySymbols(e);for(n=0;n<u.length;n++)a=u[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var d=n.createContext({}),o=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},i=function(e){var t=o(e.components);return n.createElement(d.Provider,{value:t},e.children)},m="mdxType",b={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},s=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,u=e.originalType,d=e.parentName,i=f(e,["components","mdxType","originalType","parentName"]),m=o(a),s=l,p=m["".concat(d,".").concat(s)]||m[s]||b[s]||u;return a?n.createElement(p,r(r({ref:t},i),{},{components:a})):n.createElement(p,r({ref:t},i))}));function p(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var u=a.length,r=new Array(u);r[0]=s;var f={};for(var d in t)hasOwnProperty.call(t,d)&&(f[d]=t[d]);f.originalType=e,f[m]="string"==typeof e?e:l,r[1]=f;for(var o=2;o<u;o++)r[o]=a[o];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}s.displayName="MDXCreateElement"},11048:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>b,frontMatter:()=>u,metadata:()=>f,toc:()=>o});var n=a(87462),l=(a(67294),a(3905));const u={},r="Data",f={unversionedId:"arrowjs/api-reference/data",id:"arrowjs/api-reference/data",title:"Data",description:"This documentation reflects Arrow JS v4.0. Needs to be updated for the new Arrow API in v9.0 +.",source:"@site/../docs/arrowjs/api-reference/data.md",sourceDirName:"arrowjs/api-reference",slug:"/arrowjs/api-reference/data",permalink:"/docs/arrowjs/api-reference/data",draft:!1,editUrl:"https://github.com/visgl/loaders.gl/tree/master/website/../docs/arrowjs/api-reference/data.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"DataFrame",permalink:"/docs/arrowjs/api-reference/data-frame"},next:{title:"Dictionary",permalink:"/docs/arrowjs/api-reference/dictionary"}},d={},o=[{value:"Fields",id:"fields",level:2},{value:"Static Methods",id:"static-methods",level:2},{value:"<code>Data.Null&lt;T extends Null&gt;</code>(type: T, offset: Number, length: Number, nullCount: Number, nullBitmap: NullBuffer) : Data",id:"datanullt-extends-nulltype-t-offset-number-length-number-nullcount-number-nullbitmap-nullbuffer--data",level:3},{value:"<code>Data.Int&lt;T extends Int&gt;</code>(type: T, offset: Number, length: Number, nullCount: Number, nullBitmap: NullBuffer, data: <code>DataBuffer&lt;T&gt;</code>) : Data",id:"dataintt-extends-inttype-t-offset-number-length-number-nullcount-number-nullbitmap-nullbuffer-data-databuffert--data",level:3},{value:"<code>Data.Dictionary&lt;T extends Dictionary&gt;</code>(type: T, offset: Number, length: Number, nullCount: Number, nullBitmap: NullBuffer, data: <code>DataBuffer&lt;T&gt;</code>) : Data",id:"datadictionaryt-extends-dictionarytype-t-offset-number-length-number-nullcount-number-nullbitmap-nullbuffer-data-databuffert--data",level:3},{value:"<code>Data.Float&lt;T extends Float&gt;</code>(type: T, offset: Number, length: Number, nullCount: Number, nullBitmap: NullBuffer, data: <code>DataBuffer&lt;T&gt;</code>) : Data",id:"datafloatt-extends-floattype-t-offset-number-length-number-nullcount-number-nullbitmap-nullbuffer-data-databuffert--data",level:3},{value:"<code>Data.Bool&lt;T extends Bool&gt;</code>(type: T, offset: Number, length: Number, nullCount: Number, nullBitmap: NullBuffer, data: <code>DataBuffer&lt;T&gt;</code>) : Data",id:"databoolt-extends-booltype-t-offset-number-length-number-nullcount-number-nullbitmap-nullbuffer-data-databuffert--data",level:3},{value:"<code>Data.Decimal&lt;T extends Decimal&gt;</code>(type: T, offset: Number, length: Number, nullCount: Number, nullBitmap: NullBuffer, data: <code>DataBuffer&lt;T&gt;</code>) : Data",id:"datadecimalt-extends-decimaltype-t-offset-number-length-number-nullcount-number-nullbitmap-nullbuffer-data-databuffert--data",level:3},{value:"<code>Data.Date&lt;T extends Date_&gt;</code>(type: T, offset: Number, length: Number, nullCount: Number, nullBitmap: NullBuffer, data: <code>DataBuffer&lt;T&gt;</code>) : Data",id:"datadatet-extends-date_type-t-offset-number-length-number-nullcount-number-nullbitmap-nullbuffer-data-databuffert--data",level:3},{value:"<code>Data.Time&lt;T extends Time&gt;</code>(type: T, offset: Number, length: Number, nullCount: Number, nullBitmap: NullBuffer, data: <code>DataBuffer&lt;T&gt;</code>) : Data",id:"datatimet-extends-timetype-t-offset-number-length-number-nullcount-number-nullbitmap-nullbuffer-data-databuffert--data",level:3},{value:"<code>Data.Timestamp&lt;T extends Timestamp&gt;</code>(type: T, offset: Number, length: Number, nullCount: Number, nullBitmap: NullBuffer, data: <code>DataBuffer&lt;T&gt;</code>) : Data",id:"datatimestampt-extends-timestamptype-t-offset-number-length-number-nullcount-number-nullbitmap-nullbuffer-data-databuffert--data",level:3},{value:"<code>Data.Interval&lt;T extends Interval&gt;</code>(type: T, offset: Number, length: Number, nullCount: Number, nullBitmap: NullBuffer, data: <code>DataBuffer&lt;T&gt;</code>) : Data",id:"dataintervalt-extends-intervaltype-t-offset-number-length-number-nullcount-number-nullbitmap-nullbuffer-data-databuffert--data",level:3},{value:"<code>Data.FixedSizeBinary&lt;T extends FixedSizeBinary&gt;</code>(type: T, offset: Number, length: Number, nullCount: Number, nullBitmap: NullBuffer, data: <code>DataBuffer&lt;T&gt;</code>) : Data",id:"datafixedsizebinaryt-extends-fixedsizebinarytype-t-offset-number-length-number-nullcount-number-nullbitmap-nullbuffer-data-databuffert--data",level:3},{value:"<code>Data.Binary&lt;T extends Binary&gt;</code>(type: T, offset: Number, length: Number, nullCount: Number, nullBitmap: NullBuffer, valueOffsets: ValueOffsetsBuffer, data: Uint8Array) : Data",id:"databinaryt-extends-binarytype-t-offset-number-length-number-nullcount-number-nullbitmap-nullbuffer-valueoffsets-valueoffsetsbuffer-data-uint8array--data",level:3},{value:"<code>Data.Utf8&lt;T extends Utf8&gt;</code>(type: T, offset: Number, length: Number, nullCount: Number, nullBitmap: NullBuffer, valueOffsets: ValueOffsetsBuffer, data: Uint8Array) : Data",id:"datautf8t-extends-utf8type-t-offset-number-length-number-nullcount-number-nullbitmap-nullbuffer-valueoffsets-valueoffsetsbuffer-data-uint8array--data",level:3},{value:"<code>Data.List&lt;T extends List&gt;</code>(type: T, offset: Number, length: Number, nullCount: Number, nullBitmap: NullBuffer, valueOffsets: ValueOffsetsBuffer, child: Data&lt;T'valueType'&gt; | Vector&lt;T'valueType'&gt;) : Data",id:"datalistt-extends-listtype-t-offset-number-length-number-nullcount-number-nullbitmap-nullbuffer-valueoffsets-valueoffsetsbuffer-child-datatvaluetype--vectortvaluetype--data",level:3},{value:"<code>Data.FixedSizeList&lt;T extends FixedSizeList&gt;</code>(type: T, offset: Number, length: Number, nullCount: Number, nullBitmap: NullBuffer, child: Data | Vector) : Data",id:"datafixedsizelistt-extends-fixedsizelisttype-t-offset-number-length-number-nullcount-number-nullbitmap-nullbuffer-child-data--vector--data",level:3},{value:"<code>Data.Struct&lt;T extends Struct&gt;</code>(type: T, offset: Number, length: Number, nullCount: Number, nullBitmap: NullBuffer, children: (Data | Vector)[]) : Data",id:"datastructt-extends-structtype-t-offset-number-length-number-nullcount-number-nullbitmap-nullbuffer-children-data--vector--data",level:3},{value:"<code>Data.Map&lt;T extends Map_&gt;</code>(type: T, offset: Number, length: Number, nullCount: Number, nullBitmap: NullBuffer, children: (Data | Vector)[]) : Data",id:"datamapt-extends-map_type-t-offset-number-length-number-nullcount-number-nullbitmap-nullbuffer-children-data--vector--data",level:3},{value:"<code>Data.Union&lt;T extends SparseUnion&gt;</code>(type: T, offset: Number, length: Number, nullCount: Number, nullBitmap: NullBuffer, typeIds: TypeIdsBuffer, children: (Data | Vector)[]) : Data",id:"datauniont-extends-sparseuniontype-t-offset-number-length-number-nullcount-number-nullbitmap-nullbuffer-typeids-typeidsbuffer-children-data--vector--data",level:3},{value:"<code>Data.Union&lt;T extends DenseUnion&gt;</code>(type: T, offset: Number, length: Number, nullCount: Number, nullBitmap: NullBuffer, typeIds: TypeIdsBuffer, valueOffsets: ValueOffsetsBuffer, children: (Data | Vector)[]) : Data",id:"datauniont-extends-denseuniontype-t-offset-number-length-number-nullcount-number-nullbitmap-nullbuffer-typeids-typeidsbuffer-valueoffsets-valueoffsetsbuffer-children-data--vector--data",level:3},{value:"Methods",id:"methods",level:2},{value:"constructor(type: T, offset: Number, length: Number, nullCount?: Number, buffers?: <code>Partial&lt;Buffers&lt;T&gt;</code>&gt; | <code>Data&lt;T&gt;</code>, childData?: (Data | Vector)[]);",id:"constructortype-t-offset-number-length-number-nullcount-number-buffers-partialbufferst--datat-childdata-data--vector",level:3},{value:"clone(type: DataType, offset?: Number, length?: Number, nullCount?: Number, buffers?: <code>Buffers&lt;R&gt;</code>, childData?: (Data | Vector)[]) : Data;",id:"clonetype-datatype-offset-number-length-number-nullcount-number-buffers-buffersr-childdata-data--vector--data",level:3},{value:"slice(offset: Number, length: Number) : Data",id:"sliceoffset-number-length-number--data",level:3}],i={toc:o},m="wrapper";function b(e){let{components:t,...a}=e;return(0,l.kt)(m,(0,n.Z)({},i,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"data"},"Data"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"This documentation reflects Arrow JS v4.0. Needs to be updated for the new Arrow API in v9.0 +.")),(0,l.kt)("p",null,"Untyped storage backing for ",(0,l.kt)("inlineCode",{parentName:"p"},"Vector"),"."),(0,l.kt)("p",null,"Can be thought of as array of ",(0,l.kt)("inlineCode",{parentName:"p"},"ArrayBuffer")," instances."),(0,l.kt)("p",null,"Also contains slice offset (including null bitmaps)."),(0,l.kt)("h2",{id:"fields"},"Fields"),(0,l.kt)("p",null,"readonly type: T;"),(0,l.kt)("p",null,"readonly length: Number;"),(0,l.kt)("p",null,"readonly offset: Number;"),(0,l.kt)("p",null,"readonly stride: Number;"),(0,l.kt)("p",null,"readonly childData: Data[];"),(0,l.kt)("p",null,"readonly values: ",(0,l.kt)("inlineCode",{parentName:"p"},"Buffers<T>"),"[BufferType.DATA]",";"),(0,l.kt)("p",null,"readonly typeIds: ",(0,l.kt)("inlineCode",{parentName:"p"},"Buffers<T>"),"[BufferType.TYPE]",";"),(0,l.kt)("p",null,"readonly nullBitmap: ",(0,l.kt)("inlineCode",{parentName:"p"},"Buffers<T>"),"[BufferType.VALIDITY]",";"),(0,l.kt)("p",null,"readonly valueOffsets: ",(0,l.kt)("inlineCode",{parentName:"p"},"Buffers<T>"),"[BufferType.OFFSET]",";"),(0,l.kt)("p",null,"readonly ArrayType: any;"),(0,l.kt)("p",null,"readonly typeId: T","['TType']",";"),(0,l.kt)("p",null,"readonly buffers: ",(0,l.kt)("inlineCode",{parentName:"p"},"Buffers<T>"),";"),(0,l.kt)("p",null,"readonly nullCount: Number;"),(0,l.kt)("h2",{id:"static-methods"},"Static Methods"),(0,l.kt)("p",null,"Convenience methods for creating Data instances for each of the Arrow Vector types."),(0,l.kt)("h3",{id:"datanullt-extends-nulltype-t-offset-number-length-number-nullcount-number-nullbitmap-nullbuffer--data"},(0,l.kt)("inlineCode",{parentName:"h3"},"Data.Null<T extends Null>"),"(type: T, offset: Number, length: Number, nullCount: Number, nullBitmap: NullBuffer) : Data"),(0,l.kt)("h3",{id:"dataintt-extends-inttype-t-offset-number-length-number-nullcount-number-nullbitmap-nullbuffer-data-databuffert--data"},(0,l.kt)("inlineCode",{parentName:"h3"},"Data.Int<T extends Int>"),"(type: T, offset: Number, length: Number, nullCount: Number, nullBitmap: NullBuffer, data: ",(0,l.kt)("inlineCode",{parentName:"h3"},"DataBuffer<T>"),") : Data"),(0,l.kt)("h3",{id:"datadictionaryt-extends-dictionarytype-t-offset-number-length-number-nullcount-number-nullbitmap-nullbuffer-data-databuffert--data"},(0,l.kt)("inlineCode",{parentName:"h3"},"Data.Dictionary<T extends Dictionary>"),"(type: T, offset: Number, length: Number, nullCount: Number, nullBitmap: NullBuffer, data: ",(0,l.kt)("inlineCode",{parentName:"h3"},"DataBuffer<T>"),") : Data"),(0,l.kt)("h3",{id:"datafloatt-extends-floattype-t-offset-number-length-number-nullcount-number-nullbitmap-nullbuffer-data-databuffert--data"},(0,l.kt)("inlineCode",{parentName:"h3"},"Data.Float<T extends Float>"),"(type: T, offset: Number, length: Number, nullCount: Number, nullBitmap: NullBuffer, data: ",(0,l.kt)("inlineCode",{parentName:"h3"},"DataBuffer<T>"),") : Data"),(0,l.kt)("h3",{id:"databoolt-extends-booltype-t-offset-number-length-number-nullcount-number-nullbitmap-nullbuffer-data-databuffert--data"},(0,l.kt)("inlineCode",{parentName:"h3"},"Data.Bool<T extends Bool>"),"(type: T, offset: Number, length: Number, nullCount: Number, nullBitmap: NullBuffer, data: ",(0,l.kt)("inlineCode",{parentName:"h3"},"DataBuffer<T>"),") : Data"),(0,l.kt)("h3",{id:"datadecimalt-extends-decimaltype-t-offset-number-length-number-nullcount-number-nullbitmap-nullbuffer-data-databuffert--data"},(0,l.kt)("inlineCode",{parentName:"h3"},"Data.Decimal<T extends Decimal>"),"(type: T, offset: Number, length: Number, nullCount: Number, nullBitmap: NullBuffer, data: ",(0,l.kt)("inlineCode",{parentName:"h3"},"DataBuffer<T>"),") : Data"),(0,l.kt)("h3",{id:"datadatet-extends-date_type-t-offset-number-length-number-nullcount-number-nullbitmap-nullbuffer-data-databuffert--data"},(0,l.kt)("inlineCode",{parentName:"h3"},"Data.Date<T extends Date_>"),"(type: T, offset: Number, length: Number, nullCount: Number, nullBitmap: NullBuffer, data: ",(0,l.kt)("inlineCode",{parentName:"h3"},"DataBuffer<T>"),") : Data"),(0,l.kt)("h3",{id:"datatimet-extends-timetype-t-offset-number-length-number-nullcount-number-nullbitmap-nullbuffer-data-databuffert--data"},(0,l.kt)("inlineCode",{parentName:"h3"},"Data.Time<T extends Time>"),"(type: T, offset: Number, length: Number, nullCount: Number, nullBitmap: NullBuffer, data: ",(0,l.kt)("inlineCode",{parentName:"h3"},"DataBuffer<T>"),") : Data"),(0,l.kt)("h3",{id:"datatimestampt-extends-timestamptype-t-offset-number-length-number-nullcount-number-nullbitmap-nullbuffer-data-databuffert--data"},(0,l.kt)("inlineCode",{parentName:"h3"},"Data.Timestamp<T extends Timestamp>"),"(type: T, offset: Number, length: Number, nullCount: Number, nullBitmap: NullBuffer, data: ",(0,l.kt)("inlineCode",{parentName:"h3"},"DataBuffer<T>"),") : Data"),(0,l.kt)("h3",{id:"dataintervalt-extends-intervaltype-t-offset-number-length-number-nullcount-number-nullbitmap-nullbuffer-data-databuffert--data"},(0,l.kt)("inlineCode",{parentName:"h3"},"Data.Interval<T extends Interval>"),"(type: T, offset: Number, length: Number, nullCount: Number, nullBitmap: NullBuffer, data: ",(0,l.kt)("inlineCode",{parentName:"h3"},"DataBuffer<T>"),") : Data"),(0,l.kt)("h3",{id:"datafixedsizebinaryt-extends-fixedsizebinarytype-t-offset-number-length-number-nullcount-number-nullbitmap-nullbuffer-data-databuffert--data"},(0,l.kt)("inlineCode",{parentName:"h3"},"Data.FixedSizeBinary<T extends FixedSizeBinary>"),"(type: T, offset: Number, length: Number, nullCount: Number, nullBitmap: NullBuffer, data: ",(0,l.kt)("inlineCode",{parentName:"h3"},"DataBuffer<T>"),") : Data"),(0,l.kt)("h3",{id:"databinaryt-extends-binarytype-t-offset-number-length-number-nullcount-number-nullbitmap-nullbuffer-valueoffsets-valueoffsetsbuffer-data-uint8array--data"},(0,l.kt)("inlineCode",{parentName:"h3"},"Data.Binary<T extends Binary>"),"(type: T, offset: Number, length: Number, nullCount: Number, nullBitmap: NullBuffer, valueOffsets: ValueOffsetsBuffer, data: Uint8Array) : Data"),(0,l.kt)("h3",{id:"datautf8t-extends-utf8type-t-offset-number-length-number-nullcount-number-nullbitmap-nullbuffer-valueoffsets-valueoffsetsbuffer-data-uint8array--data"},(0,l.kt)("inlineCode",{parentName:"h3"},"Data.Utf8<T extends Utf8>"),"(type: T, offset: Number, length: Number, nullCount: Number, nullBitmap: NullBuffer, valueOffsets: ValueOffsetsBuffer, data: Uint8Array) : Data"),(0,l.kt)("h3",{id:"datalistt-extends-listtype-t-offset-number-length-number-nullcount-number-nullbitmap-nullbuffer-valueoffsets-valueoffsetsbuffer-child-datatvaluetype--vectortvaluetype--data"},(0,l.kt)("inlineCode",{parentName:"h3"},"Data.List<T extends List>"),"(type: T, offset: Number, length: Number, nullCount: Number, nullBitmap: NullBuffer, valueOffsets: ValueOffsetsBuffer, child: Data<T","['valueType']","> | Vector<T","['valueType']",">) : Data"),(0,l.kt)("h3",{id:"datafixedsizelistt-extends-fixedsizelisttype-t-offset-number-length-number-nullcount-number-nullbitmap-nullbuffer-child-data--vector--data"},(0,l.kt)("inlineCode",{parentName:"h3"},"Data.FixedSizeList<T extends FixedSizeList>"),"(type: T, offset: Number, length: Number, nullCount: Number, nullBitmap: NullBuffer, child: Data | Vector) : Data"),(0,l.kt)("h3",{id:"datastructt-extends-structtype-t-offset-number-length-number-nullcount-number-nullbitmap-nullbuffer-children-data--vector--data"},(0,l.kt)("inlineCode",{parentName:"h3"},"Data.Struct<T extends Struct>"),"(type: T, offset: Number, length: Number, nullCount: Number, nullBitmap: NullBuffer, children: (Data | Vector)[]) : Data"),(0,l.kt)("h3",{id:"datamapt-extends-map_type-t-offset-number-length-number-nullcount-number-nullbitmap-nullbuffer-children-data--vector--data"},(0,l.kt)("inlineCode",{parentName:"h3"},"Data.Map<T extends Map_>"),"(type: T, offset: Number, length: Number, nullCount: Number, nullBitmap: NullBuffer, children: (Data | Vector)[]) : Data"),(0,l.kt)("h3",{id:"datauniont-extends-sparseuniontype-t-offset-number-length-number-nullcount-number-nullbitmap-nullbuffer-typeids-typeidsbuffer-children-data--vector--data"},(0,l.kt)("inlineCode",{parentName:"h3"},"Data.Union<T extends SparseUnion>"),"(type: T, offset: Number, length: Number, nullCount: Number, nullBitmap: NullBuffer, typeIds: TypeIdsBuffer, children: (Data | Vector)[]) : Data"),(0,l.kt)("h3",{id:"datauniont-extends-denseuniontype-t-offset-number-length-number-nullcount-number-nullbitmap-nullbuffer-typeids-typeidsbuffer-valueoffsets-valueoffsetsbuffer-children-data--vector--data"},(0,l.kt)("inlineCode",{parentName:"h3"},"Data.Union<T extends DenseUnion>"),"(type: T, offset: Number, length: Number, nullCount: Number, nullBitmap: NullBuffer, typeIds: TypeIdsBuffer, valueOffsets: ValueOffsetsBuffer, children: (Data | Vector)[]) : Data"),(0,l.kt)("p",null,"}"),(0,l.kt)("h2",{id:"methods"},"Methods"),(0,l.kt)("h3",{id:"constructortype-t-offset-number-length-number-nullcount-number-buffers-partialbufferst--datat-childdata-data--vector"},"constructor(type: T, offset: Number, length: Number, nullCount?: Number, buffers?: ",(0,l.kt)("inlineCode",{parentName:"h3"},"Partial<Buffers<T>"),"> | ",(0,l.kt)("inlineCode",{parentName:"h3"},"Data<T>"),", childData?: (Data | Vector)[]);"),(0,l.kt)("h3",{id:"clonetype-datatype-offset-number-length-number-nullcount-number-buffers-buffersr-childdata-data--vector--data"},"clone(type: DataType, offset?: Number, length?: Number, nullCount?: Number, buffers?: ",(0,l.kt)("inlineCode",{parentName:"h3"},"Buffers<R>"),", childData?: (Data | Vector)[]) : Data;"),(0,l.kt)("h3",{id:"sliceoffset-number-length-number--data"},"slice(offset: Number, length: Number) : Data"))}b.isMDXComponent=!0}}]);