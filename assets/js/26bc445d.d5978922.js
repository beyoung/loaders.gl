"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[0],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>d});var a=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,o=function(e,t){if(null==e)return{};var r,a,o={},n=Object.keys(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=a.createContext({}),p=function(e){var t=a.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},s=function(e){var t=p(e.components);return a.createElement(u.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},f=a.forwardRef((function(e,t){var r=e.components,o=e.mdxType,n=e.originalType,u=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),c=p(r),f=o,d=c["".concat(u,".").concat(f)]||c[f]||m[f]||n;return r?a.createElement(d,l(l({ref:t},s),{},{components:r})):a.createElement(d,l({ref:t},s))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var n=r.length,l=new Array(n);l[0]=f;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i[c]="string"==typeof e?e:o,l[1]=i;for(var p=2;p<n;p++)l[p]=r[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}f.displayName="MDXCreateElement"},68065:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>m,frontMatter:()=>n,metadata:()=>i,toc:()=>p});var a=r(87462),o=(r(67294),r(3905));const n={},l="GeoParquet",i={unversionedId:"modules/parquet/formats/geoparquet",id:"modules/parquet/formats/geoparquet",title:"GeoParquet",description:"- loaders.gl/parquet",source:"@site/../docs/modules/parquet/formats/geoparquet.md",sourceDirName:"modules/parquet/formats",slug:"/modules/parquet/formats/geoparquet",permalink:"/docs/modules/parquet/formats/geoparquet",draft:!1,editUrl:"https://github.com/visgl/loaders.gl/tree/master/website/../docs/modules/parquet/formats/geoparquet.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Parquet",permalink:"/docs/modules/parquet/formats/parquet"},next:{title:"Shapefile",permalink:"/docs/modules/shapefile/formats/shapefile"}},u={},p=[],s={toc:p},c="wrapper";function m(e){let{components:t,...r}=e;return(0,o.kt)(c,(0,a.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"geoparquet"},"GeoParquet"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("em",{parentName:"li"},(0,o.kt)("a",{parentName:"em",href:"/docs/modules/parquet"},(0,o.kt)("inlineCode",{parentName:"a"},"loaders.gl/parquet")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("em",{parentName:"li"},(0,o.kt)("a",{parentName:"em",href:"https://geoparquet.org"},"geoparquet.org")))),(0,o.kt)("p",null,"Geoparquet is a set of conventions for storing geospatial data in Parquet files. "),(0,o.kt)("p",null,"Standardization is happening at ",(0,o.kt)("a",{parentName:"p",href:"https://geoparquet.org"},"geoparquet.org"),"."),(0,o.kt)("p",null,"GeoParquet is similar to GeoArrow, as both are binary columnar formats with a high degree of similarity."),(0,o.kt)("p",null,"GeoParquet file is a Parquet file that additionally follows these conventions:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"JSON encoded metadata stored in the Parquet file's schema metadata."),(0,o.kt)("li",{parentName:"ul"},"WKB encoded geometry columns")))}m.isMDXComponent=!0}}]);