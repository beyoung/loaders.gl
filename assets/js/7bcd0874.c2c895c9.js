"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[6602],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>m});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=r.createContext({}),u=function(e){var t=r.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},d=function(e){var t=u(e.components);return r.createElement(p.Provider,{value:t},e.children)},s="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,p=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),s=u(a),c=n,m=s["".concat(p,".").concat(c)]||s[c]||f[c]||o;return a?r.createElement(m,l(l({ref:t},d),{},{components:a})):r.createElement(m,l({ref:t},d))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,l=new Array(o);l[0]=c;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[s]="string"==typeof e?e:n,l[1]=i;for(var u=2;u<o;u++)l[u]=a[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}c.displayName="MDXCreateElement"},73625:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>f,frontMatter:()=>o,metadata:()=>i,toc:()=>u});var r=a(87462),n=(a(67294),a(3905));const o={},l="FlatGeobufLoader",i={unversionedId:"modules/flatgeobuf/api-reference/flatgeobuf-loader",id:"modules/flatgeobuf/api-reference/flatgeobuf-loader",title:"FlatGeobufLoader",description:"Loader for the FlatGeobuf format, a binary FlatBuffers-encoded format that defines geospatial geometries.",source:"@site/../docs/modules/flatgeobuf/api-reference/flatgeobuf-loader.md",sourceDirName:"modules/flatgeobuf/api-reference",slug:"/modules/flatgeobuf/api-reference/flatgeobuf-loader",permalink:"/docs/modules/flatgeobuf/api-reference/flatgeobuf-loader",draft:!1,editUrl:"https://github.com/uber-web/loaders.gl/tree/master/website/../docs/modules/flatgeobuf/api-reference/flatgeobuf-loader.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"DracoWriter",permalink:"/docs/modules/draco/api-reference/draco-writer"},next:{title:"GeoPackageLoader",permalink:"/docs/modules/geopackage/api-reference/geopackage-loader"}},p={},u=[{value:"Usage",id:"usage",level:2},{value:"Outputs",id:"outputs",level:2},{value:"GeoJSON",id:"geojson",level:3},{value:"Options",id:"options",level:2},{value:"Attribution",id:"attribution",level:2}],d={toc:u},s="wrapper";function f(e){let{components:t,...a}=e;return(0,n.kt)(s,(0,r.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"flatgeobufloader"},"FlatGeobufLoader"),(0,n.kt)("p",{class:"badges"},(0,n.kt)("img",{src:"https://img.shields.io/badge/From-v3.1-blue.svg?style=flat-square",alt:"From-v3.1"}),(0,n.kt)("img",{src:"https://img.shields.io/badge/-BETA-teal.svg",alt:"BETA"})),(0,n.kt)("p",null,"Loader for the ",(0,n.kt)("a",{parentName:"p",href:"https://bjornharrtell.github.io/flatgeobuf/"},"FlatGeobuf")," format, a binary FlatBuffers-encoded format that defines geospatial geometries."),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Loader"),(0,n.kt)("th",{parentName:"tr",align:null},"Characteristic"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"File Extension"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},".fgb"),",")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"File Type"),(0,n.kt)("td",{parentName:"tr",align:null},"Binary")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"File Format"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"https://bjornharrtell.github.io/flatgeobuf/"},"FlatGeobuf"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Data Format"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/specifications/category-gis"},"Geometry"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Supported APIs"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"load"),", ",(0,n.kt)("inlineCode",{parentName:"td"},"loadInBatches"),", ",(0,n.kt)("inlineCode",{parentName:"td"},"parse"),", ",(0,n.kt)("inlineCode",{parentName:"td"},"parseSync"),", ",(0,n.kt)("inlineCode",{parentName:"td"},"parseInBatches"))))),(0,n.kt)("h2",{id:"usage"},"Usage"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"import {FlatGeobufLoader} from '@loaders.gl/flatgeobuf';\nimport {load} from '@loaders.gl/core';\n\nconst geojsonFeatures = await load(url, FlatGeobufLoader);\n")),(0,n.kt)("h2",{id:"outputs"},"Outputs"),(0,n.kt)("h3",{id:"geojson"},"GeoJSON"),(0,n.kt)("p",null,"The parser will return an array of ",(0,n.kt)("a",{parentName:"p",href:"https://tools.ietf.org/html/rfc7946"},"GeoJSON ",(0,n.kt)("inlineCode",{parentName:"a"},"features"))," in the coordinate system of the input data. If ",(0,n.kt)("inlineCode",{parentName:"p"},"gis.reproject")," is enabled, coordinates will always be reprojected to WGS84."),(0,n.kt)("h2",{id:"options"},"Options"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Option"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Default"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"gis.reproject"),(0,n.kt)("td",{parentName:"tr",align:null},"boolean"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"false")),(0,n.kt)("td",{parentName:"tr",align:null},"Whether to reproject input data into the WGS84 coordinate system.")))),(0,n.kt)("h2",{id:"attribution"},"Attribution"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"FlatGeobufLoader")," wraps the ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/bjornharrtell/flatgeobuf"},(0,n.kt)("inlineCode",{parentName:"a"},"flatgeobuf"))," NPM module under the ISC license."))}f.isMDXComponent=!0}}]);