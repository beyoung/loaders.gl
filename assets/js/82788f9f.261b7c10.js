"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[8008],{3905:(e,r,t)=>{t.d(r,{Zo:()=>d,kt:()=>p});var a=t(67294);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function c(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?c(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,a,n=function(e,r){if(null==e)return{};var t,a,n={},c=Object.keys(e);for(a=0;a<c.length;a++)t=c[a],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(a=0;a<c.length;a++)t=c[a],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var i=a.createContext({}),s=function(e){var r=a.useContext(i),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},d=function(e){var r=s(e.components);return a.createElement(i.Provider,{value:r},e.children)},h="mdxType",u={inlineCode:"code",wrapper:function(e){var r=e.children;return a.createElement(a.Fragment,{},r)}},m=a.forwardRef((function(e,r){var t=e.components,n=e.mdxType,c=e.originalType,i=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),h=s(t),m=n,p=h["".concat(i,".").concat(m)]||h[m]||u[m]||c;return t?a.createElement(p,o(o({ref:r},d),{},{components:t})):a.createElement(p,o({ref:r},d))}));function p(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var c=t.length,o=new Array(c);o[0]=m;var l={};for(var i in r)hasOwnProperty.call(r,i)&&(l[i]=r[i]);l.originalType=e,l[h]="string"==typeof e?e:n,o[1]=l;for(var s=2;s<c;s++)o[s]=t[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},31465:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>i,contentTitle:()=>o,default:()=>u,frontMatter:()=>c,metadata:()=>l,toc:()=>s});var a=t(87462),n=(t(67294),t(3905));const c={},o="RecordBatch",l={unversionedId:"arrowjs/api-reference/record-batch",id:"arrowjs/api-reference/record-batch",title:"RecordBatch",description:"This documentation reflects Arrow JS v4.0. Needs to be updated for the new Arrow API in v9.0 +.",source:"@site/../docs/arrowjs/api-reference/record-batch.md",sourceDirName:"arrowjs/api-reference",slug:"/arrowjs/api-reference/record-batch",permalink:"/docs/arrowjs/api-reference/record-batch",draft:!1,editUrl:"https://github.com/visgl/loaders.gl/tree/master/website/../docs/arrowjs/api-reference/record-batch.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"record-batch-writer",permalink:"/docs/arrowjs/api-reference/record-batch-writer"},next:{title:"Row",permalink:"/docs/arrowjs/api-reference/row"}},i={},s=[{value:"Overview",id:"overview",level:2},{value:"Usage",id:"usage",level:2},{value:"Inheritance",id:"inheritance",level:2},{value:"Members",id:"members",level:2},{value:"schema : Schema (readonly)",id:"schema--schema-readonly",level:3},{value:"numCols : Number (readonly)",id:"numcols--number-readonly",level:3},{value:"Static Methods",id:"static-methods",level:2},{value:"RecordBatch.from(vectors: Array, names: String[] = []) : RecordBatch",id:"recordbatchfromvectors-array-names-string----recordbatch",level:3},{value:"RecordBatch.new(vectors: Array, names: String[] = []) : RecordBatch",id:"recordbatchnewvectors-array-names-string----recordbatch",level:3},{value:"Methods",id:"methods",level:2},{value:"constructor(schema: Schema, numRows: Number, childData: (Data | Vector)[])",id:"constructorschema-schema-numrows-number-childdata-data--vector",level:3},{value:"constructor(schema: Schema, data: Data, children?: Vector[])",id:"constructorschema-schema-data-data-children-vector",level:3},{value:"constructor(...args: any[])",id:"constructorargs-any",level:3},{value:"clone(data: Data, children?: Array) : RecordBatch",id:"clonedata-data-children-array--recordbatch",level:3},{value:"concat(...others: Vector[]) : Table",id:"concatothers-vector--table",level:3},{value:"select(...columnNames: K[]) : RecordBatch",id:"selectcolumnnames-k--recordbatch",level:3}],d={toc:s},h="wrapper";function u(e){let{components:r,...t}=e;return(0,n.kt)(h,(0,a.Z)({},d,t,{components:r,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"recordbatch"},"RecordBatch"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"This documentation reflects Arrow JS v4.0. Needs to be updated for the new Arrow API in v9.0 +.")),(0,n.kt)("h2",{id:"overview"},"Overview"),(0,n.kt)("p",null,"A Record Batch in Apache Arrow is a collection of equal-length array instances."),(0,n.kt)("h2",{id:"usage"},"Usage"),(0,n.kt)("p",null,"A record batch can be created from this list of arrays using ",(0,n.kt)("inlineCode",{parentName:"p"},"RecordBatch.from"),":"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"const data = [\n  new Array([1, 2, 3, 4]),\n  new Array(['foo', 'bar', 'baz', None]),\n  new Array([True, None, False, True])\n]\n\nconst recordBatch = RecordBatch.from(arrays);\n")),(0,n.kt)("h2",{id:"inheritance"},"Inheritance"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"RecordBatch")," extends ",(0,n.kt)("a",{parentName:"p",href:"/docs/arrowjs/api-reference/struct-vector"},(0,n.kt)("inlineCode",{parentName:"a"},"StructVector"))," extends ",(0,n.kt)("a",{parentName:"p",href:"/docs/arrowjs/api-reference/vector"},(0,n.kt)("inlineCode",{parentName:"a"},"BaseVector"))),(0,n.kt)("h2",{id:"members"},"Members"),(0,n.kt)("h3",{id:"schema--schema-readonly"},"schema : Schema (readonly)"),(0,n.kt)("p",null,"Returns the schema of the data in the record batch"),(0,n.kt)("h3",{id:"numcols--number-readonly"},"numCols : Number (readonly)"),(0,n.kt)("p",null,"Returns number of fields/columns in the schema (shorthand for ",(0,n.kt)("inlineCode",{parentName:"p"},"this.schema.fields.length"),")."),(0,n.kt)("h2",{id:"static-methods"},"Static Methods"),(0,n.kt)("h3",{id:"recordbatchfromvectors-array-names-string----recordbatch"},"RecordBatch.from(vectors: Array, names: String[] = []) : RecordBatch"),(0,n.kt)("p",null,"Creates a ",(0,n.kt)("inlineCode",{parentName:"p"},"RecordBatch"),", see ",(0,n.kt)("inlineCode",{parentName:"p"},"RecordBatch.new()"),"."),(0,n.kt)("h3",{id:"recordbatchnewvectors-array-names-string----recordbatch"},"RecordBatch.new(vectors: Array, names: String[] = []) : RecordBatch"),(0,n.kt)("p",null,"Creates new a record batch."),(0,n.kt)("p",null,"Schema is auto inferred, using names or index positions if ",(0,n.kt)("inlineCode",{parentName:"p"},"names")," are not supplied."),(0,n.kt)("h2",{id:"methods"},"Methods"),(0,n.kt)("h3",{id:"constructorschema-schema-numrows-number-childdata-data--vector"},"constructor(schema: Schema, numRows: Number, childData: (Data | Vector)[])"),(0,n.kt)("p",null,"Create a new ",(0,n.kt)("inlineCode",{parentName:"p"},"RecordBatch")," instance with ",(0,n.kt)("inlineCode",{parentName:"p"},"numRows")," rows of child data."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"numRows")," - "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"childData")," - ")),(0,n.kt)("h3",{id:"constructorschema-schema-data-data-children-vector"},"constructor(schema: Schema, data: Data, children?: Vector[])"),(0,n.kt)("p",null,"Create a new ",(0,n.kt)("inlineCode",{parentName:"p"},"RecordBatch")," instance with ",(0,n.kt)("inlineCode",{parentName:"p"},"numRows")," rows of child data."),(0,n.kt)("h3",{id:"constructorargs-any"},"constructor(...args: any[])"),(0,n.kt)("h3",{id:"clonedata-data-children-array--recordbatch"},"clone(data: Data, children?: Array) : RecordBatch"),(0,n.kt)("p",null,"Returns a newly allocated copy of this ",(0,n.kt)("inlineCode",{parentName:"p"},"RecordBatch")),(0,n.kt)("h3",{id:"concatothers-vector--table"},"concat(...others: Vector[]) : Table"),(0,n.kt)("p",null,"Concatenates a number of ",(0,n.kt)("inlineCode",{parentName:"p"},"Vector")," instances."),(0,n.kt)("h3",{id:"selectcolumnnames-k--recordbatch"},"select(...columnNames: K[]) : RecordBatch"),(0,n.kt)("p",null,"Return a new ",(0,n.kt)("inlineCode",{parentName:"p"},"RecordBatch")," with a subset of columns."))}u.isMDXComponent=!0}}]);