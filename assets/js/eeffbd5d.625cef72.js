"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[3540],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>k});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),s=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},d=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),m=s(r),u=a,k=m["".concat(p,".").concat(u)]||m[u]||c[u]||o;return r?n.createElement(k,l(l({ref:t},d),{},{components:r})):n.createElement(k,l({ref:t},d))}));function k(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=u;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[m]="string"==typeof e?e:a,l[1]=i;for(var s=2;s<o;s++)l[s]=r[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},52243:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>c,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var n=r(87462),a=(r(67294),r(3905));const o={},l="TWKBLoader \ud83c\udd95 \ud83d\udea7",i={unversionedId:"modules/wkt/api-reference/twkb-loader",id:"modules/wkt/api-reference/twkb-loader",title:"TWKBLoader \ud83c\udd95 \ud83d\udea7",description:"Loader for the Well-known binary format for representation of geometry.",source:"@site/../docs/modules/wkt/api-reference/twkb-loader.md",sourceDirName:"modules/wkt/api-reference",slug:"/modules/wkt/api-reference/twkb-loader",permalink:"/docs/modules/wkt/api-reference/twkb-loader",draft:!1,editUrl:"https://github.com/visgl/loaders.gl/tree/master/website/../docs/modules/wkt/api-reference/twkb-loader.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"WKBWriter",permalink:"/docs/modules/wkt/api-reference/wkb-writer"},next:{title:"TWKBWriter \ud83c\udd95 \ud83d\udea7",permalink:"/docs/modules/wkt/api-reference/twkb-writer"}},p={},s=[{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"Options",id:"options",level:2},{value:"Format Summary",id:"format-summary",level:2}],d={toc:s},m="wrapper";function c(e){let{components:t,...r}=e;return(0,a.kt)(m,(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"twkbloader--"},"TWKBLoader \ud83c\udd95 \ud83d\udea7"),(0,a.kt)("p",{class:"badges"},(0,a.kt)("img",{src:"https://img.shields.io/badge/From-v2.2-blue.svg?style=flat-square",alt:"From-v2.2"})),(0,a.kt)("p",null,"Loader for the ",(0,a.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry#Well-known_binary"},"Well-known binary")," format for representation of geometry."),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Loader"),(0,a.kt)("th",{parentName:"tr",align:null},"Characteristic"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"File Extension"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},".wkb"),",")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"File Type"),(0,a.kt)("td",{parentName:"tr",align:null},"Binary")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"File Format"),(0,a.kt)("td",{parentName:"tr",align:null},"[Tiny Well Known Binary][twkb]")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Data Format"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/docs/specifications/category-gis"},"Geometry"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Supported APIs"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"load"),", ",(0,a.kt)("inlineCode",{parentName:"td"},"parse"),", ",(0,a.kt)("inlineCode",{parentName:"td"},"parseSync"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Decoder Type"),(0,a.kt)("td",{parentName:"tr",align:null},"Synchronous")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Worker Thread Support"),(0,a.kt)("td",{parentName:"tr",align:null},"Yes")))),(0,a.kt)("h2",{id:"installation"},"Installation"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @loaders.gl/wkt\nnpm install @loaders.gl/core\n")),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"import {TWKBLoader} from '@loaders.gl/wkt';\nimport {parseSync} from '@loaders.gl/core';\n\n// prettier-ignore\nconst buffer = new Uint8Array([\n  1, 1, 0, 0,   0,  0,  0,\n  0, 0, 0, 0, 240, 63,  0,\n  0, 0, 0, 0,   0,  0, 64\n]).buffer;\nconst data = parseSync(buffer, TWKBLoader);\n// => { positions: { value: Float64Array(2) [ 1, 2 ], size: 2 } }\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"import {TWKBLoader} from '@loaders.gl/wkt';\nimport {load} from '@loaders.gl/core';\n\nconst data = await load(url, TWKBLoader);\n")),(0,a.kt)("h2",{id:"options"},"Options"),(0,a.kt)("p",null,"N/A"),(0,a.kt)("h2",{id:"format-summary"},"Format Summary"),(0,a.kt)("p",null,"Well-known binary (WKB) is a binary geometry encoding to store geometries (it\ndoesn't store attributes). It's used in databases such as PostGIS and as the\ninternal storage format of Shapefiles. It's also being discussed as the internal\nstorage format for a ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/geopandas/geo-arrow-spec"},'"GeoArrow"'),"\nspecification. WKB is defined starting on page 62 of the ",(0,a.kt)("a",{parentName:"p",href:"http://portal.opengeospatial.org/files/?artifact_id=25355"},"OGC Simple Features\nspecification"),"."),(0,a.kt)("p",null,"It's essentially a binary representation of WKT. For common geospatial types\nincluding (Multi) ",(0,a.kt)("inlineCode",{parentName:"p"},"Point"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"Line"),", and ",(0,a.kt)("inlineCode",{parentName:"p"},"Polygon"),", there's a 1:1 correspondence\nbetween WKT/WKB and GeoJSON. WKT and WKB also support extended geometry types,\nsuch as ",(0,a.kt)("inlineCode",{parentName:"p"},"Curve"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"Surface"),", and ",(0,a.kt)("inlineCode",{parentName:"p"},"TIN"),", which don't have a correspondence to\nGeoJSON."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Coordinates can be 2-4 dimensions and are interleaved."),(0,a.kt)("li",{parentName:"ul"},"Positions stored as double precision")),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/15164633/83707157-90413b80-a5d6-11ea-921c-b04208942e79.png",alt:"image"})))}c.isMDXComponent=!0}}]);