"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[2973],{79325:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>i,contentTitle:()=>n,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>f});var s=o(85893),r=o(11151);const a={},n="FlatGeobuf",l={id:"modules/flatgeobuf/formats/flatgeobuf",title:"FlatGeobuf",description:"- @loaders.gl/flatgeobuf",source:"@site/../docs/modules/flatgeobuf/formats/flatgeobuf.md",sourceDirName:"modules/flatgeobuf/formats",slug:"/modules/flatgeobuf/formats/flatgeobuf",permalink:"/docs/modules/flatgeobuf/formats/flatgeobuf",draft:!1,unlisted:!1,editUrl:"https://github.com/visgl/loaders.gl/tree/master/website/../docs/modules/flatgeobuf/formats/flatgeobuf.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"PLY - Polygon File Format",permalink:"/docs/modules/ply/formats/ply"},next:{title:"GeoJSON",permalink:"/docs/modules/json/formats/geojson"}},i={},f=[{value:"Characteristics",id:"characteristics",level:2}];function c(e){const t={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",li:"li",p:"p",ul:"ul",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"flatgeobuf",children:"FlatGeobuf"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.em,{children:(0,s.jsx)(t.a,{href:"/docs/moodules/flatgeobuf",children:(0,s.jsx)(t.code,{children:"@loaders.gl/flatgeobuf"})})})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.em,{children:(0,s.jsx)(t.a,{href:"http://flatgeobuf.org/",children:"FlatGeobuf"})})}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"FlatGeobuf is a binary (FlatBuffers-encoded) format that defines geospatial geometries. It is row-oriented rather than columnar (like GeoParquet and GeoArrow) and offers a different set of trade-offs."}),"\n",(0,s.jsxs)(t.p,{children:["FlatGeobuf was inspired by ",(0,s.jsx)(t.a,{href:"https://github.com/mapbox/geobuf",children:"geobuf"})," and ",(0,s.jsx)(t.a,{href:"https://github.com/mourner/flatbush",children:"flatbush"}),"."]}),"\n",(0,s.jsx)(t.h2,{id:"characteristics",children:"Characteristics"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"binary"}),"\n",(0,s.jsx)(t.li,{children:"row oriented"}),"\n",(0,s.jsx)(t.li,{children:"supports appends, but no random writes"}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"Goals are to be suitable for large volumes of static data, significantly faster than legacy formats without size limitations for contents or metainformation and to be suitable for streaming/random access."})]})}function u(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},11151:(e,t,o)=>{o.d(t,{Z:()=>l,a:()=>n});var s=o(67294);const r={},a=s.createContext(r);function n(e){const t=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:n(e.components),s.createElement(a.Provider,{value:t},e.children)}}}]);